name: Vencord Universal Installer Builder

on:
  schedule:
    - cron: '0 * * * *' # Ch·∫°y m·ªói gi·ªù
  workflow_dispatch: # Cho ph√©p k√≠ch ho·∫°t th·ªß c√¥ng

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      ven_hash: ${{ steps.hash.outputs.hash }}
    steps:
      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix rsync

      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'main-repo'
          fetch-depth: 0
          submodules: false
          set-safe-directory: false

      - name: Setup Vencord directory
        run: |
          mkdir -p main-repo/Vencord
          git clone --depth 1 --single-branch --branch main https://github.com/Vendicated/Vencord.git temp-vencord
          rsync -a --delete --exclude='.git' --exclude='node_modules' temp-vencord/ main-repo/Vencord/
          rm -rf temp-vencord

      - name: Update Vencord from upstream
        run: |
          git clone --depth 1 --single-branch --branch main https://github.com/Vendicated/Vencord.git temp-upstream
          rsync -a --delete --exclude='.git' --exclude='node_modules' temp-upstream/ main-repo/Vencord/
          rm -rf temp-upstream

      - name: Modify .gitignore for dist and executables
        run: |
          cd main-repo/Vencord
          if [ -f ".gitignore" ]; then
            sed -i -e '/dist/d' -e '/\.exe/d' -e '/vencord_installer/d' .gitignore
            echo "# Dist and executable files are intentionally tracked in this fork" >> .gitignore
          else
            echo "No .gitignore file found"
          fi

      - name: Install dependencies
        run: |
          cd main-repo/Vencord
          npm i -g pnpm
          pnpm i

      - name: Update plugin
        run: |
          cd main-repo/Vencord/src/plugins
          if [ -d "fakeProfile" ]; then
            rm -rf fakeProfile
          fi
          git clone --depth 1 https://github.com/gujarathisampath/fakeProfile.git
          rm -rf fakeProfile/.git
          find fakeProfile -type f -exec dos2unix {} +

      - name: Generate Vencord hash
        id: hash
        run: |
          cd main-repo/Vencord
          echo "hash=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Upload Vencord artifact
        uses: actions/upload-artifact@v4
        with:
          name: vencord-setup
          path: main-repo/Vencord
          retention-days: 1

  build:
    needs: setup
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - name: Download Vencord artifact
        uses: actions/download-artifact@v4
        with:
          name: vencord-setup
          path: main-repo/Vencord

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install platform-specific tools
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            # C√†i c√¥ng c·ª• build cho Windows
            choco install -y nsis python3 visualstudio2022-workload-vctools
            
          elif [ "$RUNNER_OS" == "macOS" ]; then
            # C√†i c√¥ng c·ª• build cho macOS
            if ! command -v brew &> /dev/null; then
              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
              echo 'export PATH="/usr/local/bin:$PATH"' >> ~/.bash_profile
              source ~/.bash_profile
            fi
            brew install fpm || echo "fpm installation failed"
            
          elif [ "$RUNNER_OS" == "Linux" ]; then
            # C√†i c√¥ng c·ª• build cho Linux
            sudo apt-get update
            sudo apt-get install -y \
              pkg-config \
              libsdl2-dev \
              libglx-dev \
              libgl1-mesa-dev \
              xorg-dev \
              libwayland-dev \
              libxkbcommon-dev \
              wayland-protocols \
              extra-cmake-modules \
              libx11-dev \
              libxcursor-dev \
              libxi-dev \
              libxinerama-dev \
              libxrandr-dev \
              golang \
              ruby-dev \
              build-essential \
              rpm
            
            # C√†i fpm qua gem
            sudo gem install fpm
            
          fi

      - name: Install dependencies
        run: |
          cd main-repo/Vencord
          npm i -g pnpm
          pnpm i

      - name: Vencord - Apply fix CSP for fakeProfile
        run: python3 main-repo/src/csp_fix.py

      - name: Build artifacts
        shell: bash
        run: |
          cd main-repo/Vencord
          
          git init -q
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -q -m "Temporary commit for build"
          
          git remote add origin https://github.com/Vendicated/Vencord.git
          
          pnpm build
          pnpm buildWeb
          
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmd.exe /c "rmdir /s /q .git"
          else
            rm -rf .git
          fi
          
          mv dist dist-${{ runner.os }}

      #- name: Build custom installer
      #  shell: bash
      #  run: |
      #    cd main-repo
      #    
      #    # Clone repo installer ƒë√£ fork
      #    git clone --depth 1 https://github.com/segeyy/Installer.git
      #    cd Installer
      #    
      #    # C√†i ƒë·∫∑t dependencies
      #    npm i -g pnpm
      #    pnpm i
      #    
      #    # Build installer cho n·ªÅn t·∫£ng t∆∞∆°ng ·ª©ng
      #    if [ "$RUNNER_OS" == "Windows" ]; then
      #      pnpm build:win
      #      INSTALLER_PATH="dist/win-unpacked/VencordInstaller.exe"
      #      OUTPUT_NAME="VencordInstaller-Custom.exe"
      #      
      #    elif [ "$RUNNER_OS" == "macOS" ]; then
      #      pnpm build:mac
      #      INSTALLER_PATH="dist/mac/VencordInstaller.app"
      #      OUTPUT_NAME="VencordInstaller-Custom.app"
      #      
      #    elif [ "$RUNNER_OS" == "Linux" ]; then
      #      # Build GUI v√† CLI cho Linux
      #      go mod tidy
      #      
      #      # Build GUI cho X11
      #      go build -o VencordInstaller-GUI-X11
      #      
      #      # Build GUI cho Wayland
      #      go build --tags wayland -o VencordInstaller-GUI-Wayland
      #      
      #      # Build CLI
      #      go build --tags cli -o VencordInstaller-CLI
      #      
      #      # T·∫°o th∆∞ m·ª•c dist ƒë·ªÉ l∆∞u c√°c b·∫£n build
      #      mkdir -p dist
      #      mv VencordInstaller-* dist/
      #      INSTALLER_PATH="dist"
      #      OUTPUT_NAME="linux-installers"
      #    fi
      #    
      #    # T·∫°o th∆∞ m·ª•c installers trong Vencord
      #    mkdir -p ../Vencord/installers
      #    
      #    # Copy file installer
      #    if [ -d "$INSTALLER_PATH" ]; then
      #      cp -r "$INSTALLER_PATH"/* "../Vencord/installers/$OUTPUT_NAME"
      #    else
      #      cp -r "$INSTALLER_PATH" "../Vencord/installers/$OUTPUT_NAME"
      #    fi
      #    
      #    echo "Installer built for $RUNNER_OS"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: main-repo/Vencord
          retention-days: 1

  combine-and-commit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'main-repo'
          fetch-depth: 0
          submodules: false
          set-safe-directory: false

      - name: Download Vencord artifact
        uses: actions/download-artifact@v4
        with:
          name: vencord-setup
          path: main-repo/Vencord

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Combine artifacts
        run: |
          cd main-repo
          
          # T·∫°o th∆∞ m·ª•c dist t·ªïng h·ª£p
          mkdir -p Vencord/dist
          
          # Sao ch√©p c√°c b·∫£n build t·ª´ t·∫•t c·∫£ n·ªÅn t·∫£ng
          for os_dir in dist-artifacts/dist-*; do
            if [ -d "$os_dir" ]; then
              os_name=$(basename "$os_dir")
              mkdir -p "Vencord/dist/$os_name"
              cp -a "$os_dir"/* "Vencord/dist/$os_name/"
            fi
          done
          
          # T·∫°o th∆∞ m·ª•c installers v√† sao ch√©p t·∫•t c·∫£ installer
          mkdir -p Vencord/installers
          for artifact_dir in dist-artifacts/*; do
            if [ -d "$artifact_dir/Vencord/installers" ]; then
              cp -a "$artifact_dir/Vencord/installers"/* Vencord/installers/
            fi
          done
          
          # Ki·ªÉm tra n·ªôi dung
          echo "Combined dist contents:"
          ls -la Vencord/dist
          echo "Installers:"
          ls -la Vencord/installers

      - name: Commit Vencord changes
        run: |
          cd main-repo
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main
          git add Vencord
          if ! git diff-index --quiet HEAD -- Vencord; then
            git commit -m "ü§ñ Multi-platform build: Vencord artifacts and installers $(date +'%Y-%m-%d %H:%M')"
            git push "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main
          else
            echo "No changes in Vencord directory"
          fi
