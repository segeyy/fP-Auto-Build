name: Building Test

on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - '*'

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix rsync

      - name: Python - Creating virtual environment
        run: python3 -m venv venv

      - name: Python - Activating virtual environment
        run: |
          . venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Setup Equicord Build
        run: python3 src/equicord_setup.py

      - name: Modify .gitignore for dist and executables
        run: |
          cd Equicord
          if [ -f ".gitignore" ]; then
            sed -i -e '/dist/d' -e '/\.exe/d' -e '/equicord_installer/d' .gitignore
            echo "# Dist and executable files are intentionally tracked in this fork" >> .gitignore
          else
            echo "No .gitignore file found"
          fi

      - name: Install dependencies
        run: |
          cd Equicord
          npm i -g pnpm
          pnpm i --no-frozen-lockfile # WARN: --no-frozen-lockfile is very important, do not erase from command.

      - name: Update plugin
        run: |
          cd Equicord/src/plugins
          if [ -d "fakeProfile" ]; then
            rm -rf fakeProfile
          fi

          git clone --depth 1 https://github.com/gujarathisampath/fakeProfile.git
          rm -rf fakeProfile/.git
          find fakeProfile -type f -exec dos2unix {} +

      - name: Upload Equicord artifact
        uses: actions/upload-artifact@v4
        with:
          name: equicord-setup
          path: Equicord
          retention-days: 1

  build:
    needs: setup
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Download Equicord artifact
        uses: actions/download-artifact@v4
        with:
          name: equicord-setup
          path: Equicord

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd Equicord
          npm i -g pnpm
          pnpm i --no-frozen-lockfile

      - name: Build artifacts
        shell: bash
        run: |
          cd Equicord

          git init -q
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -q -m "Temporary commit for build"
          
          git remote add origin https://github.com/Equicord/Equicord.git

          pnpm build
          pnpm buildWeb

          if [ "$RUNNER_OS" == "Windows" ]; then
            cmd.exe /c "rmdir /s /q .git"
          else
            rm -rf .git
          fi

          mv dist dist-${{ runner.os }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: Equicord/dist-*
          retention-days: 1

  combing-and-pushing:
    needs: [setup, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'main-repo'
          fetch-depth: 0
          submodules: false
          set-safe-directory: false
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Download Equicord artifact
        uses: actions/download-artifact@v4
        with:
          name: equicord-setup
          path: Equicord

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Check for existing build directory
        id: check-build
        run: |
          cd main-repo
          if [ -d "Equicord/dist" ]; then
            echo "Build directory exists"
            echo "build_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Build directory does not exist"
            echo "build_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare build artifacts
        id: compare-builds
        if: steps.check-build.outputs.build_exists == 'true'
        run: |
          cd main-repo
          echo "Comparing existing build with new artifacts..."
          
          # Compare file counts
          existing_count=$(find Equicord/dist -type f | wc -l)
          new_count=$(find ../dist-artifacts -type f | wc -l)
          
          if [ "$existing_count" -ne "$new_count" ]; then
            echo "File counts differ (existing: $existing_count, new: $new_count)"
            echo "needs_update=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Compare file sizes and modification dates
          needs_update=false
          for os_dir in ../dist-artifacts/dist-*; do
            os_name=$(basename "$os_dir")
            if [ ! -d "Equicord/dist/$os_name" ]; then
              echo "New OS directory found: $os_name"
              needs_update=true
              break
            fi
            
            # Compare files
            for file in $(find "$os_dir" -type f); do
              rel_path="${file#../dist-artifacts/dist-*/}"
              dest_file="Equicord/dist/$os_name/$rel_path"
              
              if [ ! -f "$dest_file" ]; then
                echo "New file found: $rel_path"
                needs_update=true
                break 2
              fi
              
              # Compare file sizes
              new_size=$(stat -c%s "$file")
              existing_size=$(stat -c%s "$dest_file")
              
              if [ "$new_size" -ne "$existing_size" ]; then
                echo "File size differs: $rel_path (existing: $existing_size, new: $new_size)"
                needs_update=true
                break 2
              fi
            done
          done
          
          if [ "$needs_update" = true ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "No differences found, no update needed"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Combine artifacts
        if: steps.check-build.outputs.build_exists == 'false' || steps.compare-builds.outputs.needs_update == 'true'
        run: |
          cd main-repo
          mkdir -p Equicord/dist

          for os_dir in ../dist-artifacts/dist-*; do
            if [ -d "$os_dir" ]; then
              os_name=$(basename "$os_dir")
              echo "Copying artifacts for $os_name..."
              mkdir -p "Equicord/dist/$os_name"
              rsync -a --delete "$os_dir/" "Equicord/dist/$os_name/"
            fi
          done

          echo "Combined dist contents:"
          ls -la Equicord/dist

      - name: Commit Equicord changes
        if: steps.check-build.outputs.build_exists == 'false' || steps.compare-builds.outputs.needs_update == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
          tag: ${{ env.RELEASE_VERSION }}
        run: |
          cd main-repo
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main

          git add Equicord
          if ! git diff-index --quiet HEAD -- Equicord; then
            git commit -m "ðŸ¤– feat(build/Equicord): Equicord artifacts $(date +'%Y-%m-%d %H:%M')"
            git push "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main
          else
            echo "No changes in Equicord directory"
          fi

      - name: Skip update (no changes needed)
        if: steps.check-build.outputs.build_exists == 'true' && steps.compare-builds.outputs.needs_update == 'false'
        run: |
          echo "Build directory exists and no updates needed, skipping deployment"