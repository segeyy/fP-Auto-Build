name: Building Test

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix rsync

      - name: Python - Creating virtual environment
        run: python3 -m venv venv

      - name: Python - Activating virtual environment
        run: |
          . venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Setup Equicord Build
        run: python3 src/equicord_setup.py

      - name: Modify .gitignore for dist and executables
        run: |
          cd Equicord
          if [ -f ".gitignore" ]; then
            sed -i -e '/dist/d' -e '/\.exe/d' -e '/equicord_installer/d' .gitignore
            echo "# Dist and executable files are intentionally tracked in this fork" >> .gitignore
          else
            echo "No .gitignore file found"
          fi

      - name: Install dependencies
        run: |
          cd Equicord
          npm i -g pnpm
          pnpm i --no-frozen-lockfile # WARN: --no-frozen-lockfile is very important, do not erase from command.

      - name: Update plugin
        run: |
          cd Equicord/src/plugins
          if [ -d "fakeProfile" ]; then
            rm -rf fakeProfile
          fi

          git clone --depth 1 https://github.com/gujarathisampath/fakeProfile.git
          rm -rf fakeProfile/.git
          find fakeProfile -type f -exec dos2unix {} +

      - name: Upload Equicord artifact
        uses: actions/upload-artifact@v4
        with:
          name: equicord-setup
          path: Equicord
          retention-days: 1

  push-setup:
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'main-repo'
          fetch-depth: 0
          submodules: false
          set-safe-directory: false

      - name: Download Equicord setup artifact
        uses: actions/download-artifact@v4
        with:
          name: equicord-setup
          path: main-repo/Equicord

      - name: Commit and push setup files
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        run: |
          cd main-repo
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main

          git add Equicord
          if ! git diff-index --quiet HEAD -- Equicord; then
            git commit -m "ü§ñ feat(setup): Update Equicord setup files $(date +'%Y-%m-%d %H:%M')"
            git push "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main
          else
            echo "No changes in Equicord setup files"
          fi

  build:
    needs: push-setup
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Download Equicord artifact
        uses: actions/download-artifact@v4
        with:
          name: equicord-setup
          path: Equicord

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd Equicord
          npm i -g pnpm
          pnpm i --no-frozen-lockfile

      - name: Build artifacts
        shell: bash
        run: |
          cd Equicord

          git init -q
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -q -m "Temporary commit for build"
          
          git remote add origin https://github.com/Equicord/Equicord.git

          pnpm build
          pnpm buildWeb

          if [ "$RUNNER_OS" == "Windows" ]; then
            cmd.exe /c "rmdir /s /q .git"
          else
            rm -rf .git
          fi

          # NOTE: Removing not usefuls levels of dir
          if [ -d "dist/dist" ]; then
            mv dist/dist/* dist/
            rm -rf dist/dist
          fi
          
          mv dist dist-${{ runner.os }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: Equicord/dist-*
          retention-days: 1

  push-dist:
    needs: [push-setup, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}
          path: 'main-repo'
          fetch-depth: 0
          submodules: false
          set-safe-directory: false

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Check for existing dist directory
        id: check-dist
        run: |
          cd main-repo
          if [ -d "Equicord/dist" ]; then
            echo "Dist directory exists"
            echo "dist_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Dist directory does not exist"
            echo "dist_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Combine artifacts
        if: steps.check-dist.outputs.dist_exists == 'false' || steps.compare-dists.outputs.needs_update == 'true'
        run: |
          cd main-repo
          mkdir -p Equicord/dist

          for os_dir in ../dist-artifacts/dist-*; do
            if [ -d "$os_dir" ]; then
              os_name=$(basename "$os_dir")
              echo "Copying artifacts for $os_name..."
              # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ dist-OS –Ω–∞–ø—Ä—è–º—É—é –≤ dist/OS/
              mkdir -p "Equicord/dist/$os_name"
              cp -a "$os_dir/"* "Equicord/dist/$os_name/"
            fi
          done

          echo "Combined dist contents:"
          ls -la Equicord/dist

      - name: Commit and push dist files
        if: steps.check-dist.outputs.dist_exists == 'false' || steps.compare-dists.outputs.needs_update == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
          tag: ${{ env.RELEASE_VERSION }}
        run: |
          cd main-repo
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main

          git add Equicord/dist
          if ! git diff-index --quiet HEAD -- Equicord/dist; then
            git commit -m "ü§ñ feat(dist): Update Equicord dist artifacts $(date +'%Y-%m-%d %H:%M')"
            git push "https://$GITHUB_ACTOR:${{ secrets.MY_PAT }}@github.com/segeyy/fP-Auto-Build.git" main
          else
            echo "No changes in Equicord dist directory"
          fi

      - name: Skip dist update (no changes needed)
        if: steps.check-dist.outputs.dist_exists == 'true' && steps.compare-dists.outputs.needs_update == 'false'
        run: |
          echo "Dist directory exists and no updates needed, skipping deployment"