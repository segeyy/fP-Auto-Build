{"version":3,"file":"usercss-meta.min.js","sources":["../lib/error.js","../lib/parse-util.js","../shim/url.js","../lib/parse.js","../data/units.js","../lib/levensthein-distance.js","../lib/stringify.js"],"sourcesContent":["class ParseError extends Error {\r\n  constructor(err) {\r\n    super(err.message);\r\n    delete err.message;\r\n    this.name = 'ParseError';\r\n    Object.assign(this, err);\r\n  }\r\n}\r\n\r\nclass MissingCharError extends ParseError {\r\n  constructor(chars, index) {\r\n    super({\r\n      code: 'missingChar',\r\n      args: chars,\r\n      message: `Missing character: ${chars.map(c => `'${c}'`).join(', ')}`,\r\n      index\r\n    });\r\n  }\r\n}\r\n\r\nclass EOFError extends ParseError {\r\n  constructor(index) {\r\n    super({\r\n      code: 'EOF',\r\n      message: 'Unexpected end of file',\r\n      index\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  ParseError,\r\n  MissingCharError,\r\n  EOFError\r\n};\r\n","const {ParseError, MissingCharError, EOFError} = require('./error');\r\n\r\nconst RX_EOT = /<<<EOT([\\s\\S]+?)EOT;/y;\r\nconst RX_LINE = /.*/y;\r\nconst RX_NUMBER = /-?(\\d+(\\.\\d+)?|\\.\\d+)([eE]-?\\d+)?\\s*/y;\r\nconst RX_WHITESPACE = /\\s*/y;\r\nconst RX_WHITESPACE_SAMELINE = /[^\\S\\n]*/y;\r\nconst RX_WORD = /([\\w-]+)\\s*/y;\r\nconst RX_STRING_BACKTICK = /(`(?:\\\\`|[\\s\\S])*?`)/y;\r\nconst RX_STRING_QUOTED = /((['\"])(?:\\\\\\2|[^\\n])*?\\2|\\w+)/y;\r\nconst RX_STRING_UNQUOTED = /[^\"]*/y;\r\n/** Relaxed semver:\r\n * dot-separated digits sequence e.g. 1 or 1.2 or 1.2.3.4.5\r\n * optional pre-release chunk: \"-\" followed by dot-separated word characters, \"-\"\r\n * optional build chunk: \"+\" followed by dot-separated word characters, \"-\"\r\n */\r\n// FIXME: should we allow leading 'v'?\r\nconst RX_VERSION = /^v?\\d+(\\.\\d+)*(?:-(\\w[-\\w]*(\\.[-\\w]+)*))?(?:\\+(\\w[-\\w]*(\\.[-\\w]+)*))?$/;\r\n\r\nconst JSON_PRIME = {\r\n  __proto__: null,\r\n  'null': null,\r\n  'true': true,\r\n  'false': false\r\n};\r\n\r\nfunction unescapeComment(s) {\r\n  return s.replace(/\\*\\\\\\//g, '*/');\r\n}\r\n\r\nfunction unquote(s) {\r\n  const q = s[0];\r\n  if (q === s[s.length - 1] && (q === '\"' || q === \"'\" || q === '`')) {\r\n    // http://www.json.org/\r\n    return s.slice(1, -1).replace(\r\n      new RegExp(`\\\\\\\\([${q}\\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})`, 'g'),\r\n      s => {\r\n        if (s[1] === q) {\r\n          return q;\r\n        }\r\n\r\n        return JSON.parse(`\"${s}\"`);\r\n      }\r\n    );\r\n  }\r\n\r\n  return unescapeComment(s);\r\n}\r\n\r\nfunction eatLine(state) {\r\n  RX_LINE.lastIndex = state.lastIndex;\r\n  RX_LINE.exec(state.text);\r\n  state.lastIndex = RX_LINE.lastIndex;\r\n}\r\n\r\nfunction eatWhitespace(state) {\r\n  RX_WHITESPACE.lastIndex = state.lastIndex;\r\n  state.lastIndex += RX_WHITESPACE.exec(state.text)[0].length;\r\n}\r\n\r\nfunction eatSameLineWhitespace(state) {\r\n  RX_WHITESPACE_SAMELINE.lastIndex = state.lastIndex;\r\n  state.lastIndex += RX_WHITESPACE_SAMELINE.exec(state.text)[0].length;\r\n}\r\n\r\nfunction parseChar(state) {\r\n  if (state.lastIndex >= state.text.length) {\r\n    throw new EOFError(state.lastIndex);\r\n  }\r\n\r\n  state.index = state.lastIndex;\r\n  state.value = state.text[state.lastIndex];\r\n  state.lastIndex++;\r\n  eatWhitespace(state);\r\n}\r\n\r\nfunction parseWord(state) {\r\n  const pos = state.lastIndex;\r\n  RX_WORD.lastIndex = pos;\r\n  const match = RX_WORD.exec(state.text);\r\n  if (!match) {\r\n    throw new ParseError({\r\n      code: 'invalidWord',\r\n      message: 'Invalid word',\r\n      index: pos\r\n    });\r\n  }\r\n\r\n  state.index = pos;\r\n  state.value = match[1];\r\n  state.lastIndex += match[0].length;\r\n}\r\n\r\nfunction parseJSON(state) {\r\n  const pos = state.lastIndex;\r\n  try {\r\n    parseJSONValue(state);\r\n  } catch (err) {\r\n    err.message = `Invalid JSON: ${err.message}`;\r\n    throw err;\r\n  }\r\n\r\n  state.index = pos;\r\n}\r\n\r\nfunction parseEOT(state) {\r\n  const pos = state.lastIndex;\r\n  RX_EOT.lastIndex = pos;\r\n  const match = RX_EOT.exec(state.text);\r\n  if (!match) {\r\n    throw new ParseError({\r\n      code: 'missingEOT',\r\n      message: 'Missing EOT',\r\n      index: pos\r\n    });\r\n  }\r\n\r\n  state.index = pos;\r\n  state.lastIndex += match[0].length;\r\n  state.value = unescapeComment(match[1].trim());\r\n  eatWhitespace(state);\r\n}\r\n\r\nfunction parseStringUnquoted(state) {\r\n  RX_STRING_UNQUOTED.lastIndex = state.lastIndex;\r\n  const match = RX_STRING_UNQUOTED.exec(state.text);\r\n  state.index = state.lastIndex;\r\n  state.lastIndex = RX_STRING_UNQUOTED.lastIndex;\r\n  state.value = match[0].trim().replace(/\\s+/g, '-');\r\n}\r\n\r\nfunction parseString(state, sameLine = false) {\r\n  const pos = state.lastIndex;\r\n  const rx = state.text[pos] === '`' ? RX_STRING_BACKTICK : RX_STRING_QUOTED;\r\n  rx.lastIndex = pos;\r\n  const match = rx.exec(state.text);\r\n  if (!match) {\r\n    throw new ParseError({\r\n      code: 'invalidString',\r\n      message: 'Invalid string',\r\n      index: pos\r\n    });\r\n  }\r\n\r\n  state.index = pos;\r\n  state.lastIndex += match[0].length;\r\n  state.value = unquote(match[1]);\r\n  if (sameLine) {\r\n    eatSameLineWhitespace(state);\r\n  } else {\r\n    eatWhitespace(state);\r\n  }\r\n}\r\n\r\nfunction parseJSONValue(state) {\r\n  const {text} = state;\r\n  if (text[state.lastIndex] === '{') {\r\n    // object\r\n    const object = {};\r\n    state.lastIndex++;\r\n    eatWhitespace(state);\r\n    while (text[state.lastIndex] !== '}') {\r\n      parseString(state);\r\n      const key = state.value;\r\n      if (text[state.lastIndex] !== ':') {\r\n        throw new MissingCharError([':'], state.lastIndex);\r\n      }\r\n\r\n      state.lastIndex++;\r\n      eatWhitespace(state);\r\n      parseJSONValue(state);\r\n      object[key] = state.value;\r\n      if (text[state.lastIndex] === ',') {\r\n        state.lastIndex++;\r\n        eatWhitespace(state);\r\n      } else if (text[state.lastIndex] !== '}') {\r\n        throw new MissingCharError([',', '}'], state.lastIndex);\r\n      }\r\n    }\r\n\r\n    state.lastIndex++;\r\n    eatWhitespace(state);\r\n    state.value = object;\r\n  } else if (text[state.lastIndex] === '[') {\r\n    // array\r\n    const array = [];\r\n    state.lastIndex++;\r\n    eatWhitespace(state);\r\n    while (text[state.lastIndex] !== ']') {\r\n      parseJSONValue(state);\r\n      array.push(state.value);\r\n      if (text[state.lastIndex] === ',') {\r\n        state.lastIndex++;\r\n        eatWhitespace(state);\r\n      } else if (text[state.lastIndex] !== ']') {\r\n        throw new MissingCharError([',', ']'], state.lastIndex);\r\n      }\r\n    }\r\n\r\n    state.lastIndex++;\r\n    eatWhitespace(state);\r\n    state.value = array;\r\n  } else if (text[state.lastIndex] === '\"' || text[state.lastIndex] === \"'\" || text[state.lastIndex] === '`') {\r\n    // string\r\n    parseString(state);\r\n  } else if (/[-\\d.]/.test(text[state.lastIndex])) {\r\n    // number\r\n    parseNumber(state);\r\n  } else {\r\n    parseWord(state);\r\n    if (!(state.value in JSON_PRIME)) {\r\n      throw new ParseError({\r\n        code: 'unknownJSONLiteral',\r\n        args: [state.value],\r\n        message: `Unknown literal '${state.value}'`,\r\n        index: state.index\r\n      });\r\n    }\r\n\r\n    state.value = JSON_PRIME[state.value];\r\n  }\r\n}\r\n\r\nfunction parseNumber(state) {\r\n  const pos = state.lastIndex;\r\n  RX_NUMBER.lastIndex = pos;\r\n  const match = RX_NUMBER.exec(state.text);\r\n  if (!match) {\r\n    throw new ParseError({\r\n      code: 'invalidNumber',\r\n      message: 'Invalid number',\r\n      index: pos\r\n    });\r\n  }\r\n\r\n  state.index = pos;\r\n  state.value = Number(match[0].trim());\r\n  state.lastIndex += match[0].length;\r\n}\r\n\r\nfunction parseStringToEnd(state) {\r\n  RX_LINE.lastIndex = state.lastIndex;\r\n  const match = RX_LINE.exec(state.text);\r\n  const value = match[0].trim();\r\n  if (!value) {\r\n    throw new ParseError({\r\n      code: 'missingValue',\r\n      message: 'Missing value',\r\n      index: RX_LINE.lastIndex\r\n    });\r\n  }\r\n\r\n  state.index = state.lastIndex;\r\n  state.value = unquote(value);\r\n  state.lastIndex = RX_LINE.lastIndex;\r\n}\r\n\r\nfunction isValidVersion(version) {\r\n  return RX_VERSION.test(version);\r\n}\r\n\r\nmodule.exports = {\r\n  eatLine,\r\n  eatWhitespace,\r\n  parseChar,\r\n  parseEOT,\r\n  parseJSON,\r\n  parseNumber,\r\n  parseString,\r\n  parseStringToEnd,\r\n  parseStringUnquoted,\r\n  parseWord,\r\n  unquote,\r\n  isValidVersion\r\n};\r\n","/* eslint-env browser */\r\n\r\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\r\nexports.URL = self.URL;\r\n","'use strict';\r\n\r\nconst {URL} = require('url');\r\n\r\nconst UNITS = require('../data/units');\r\nconst {ParseError, MissingCharError} = require('./error');\r\nconst {LevenshteinDistanceWithMax} = require('./levensthein-distance');\r\nconst {\r\n  eatLine,\r\n  eatWhitespace,\r\n  parseEOT,\r\n  parseJSON,\r\n  parseString,\r\n  parseStringToEnd,\r\n  parseStringUnquoted,\r\n  parseWord,\r\n  parseChar,\r\n  isValidVersion\r\n} = require('./parse-util');\r\n\r\nconst UNITS_SET = new Set(UNITS);\r\n\r\nconst DEFAULT_PARSER = {\r\n  name: parseStringToEnd,\r\n  version: parseStringToEnd,\r\n  namespace: parseStringToEnd,\r\n  author: parseStringToEnd,\r\n  description: parseStringToEnd,\r\n  homepageURL: parseStringToEnd,\r\n  supportURL: parseStringToEnd,\r\n  updateURL: parseStringToEnd,\r\n  license: parseStringToEnd,\r\n  preprocessor: parseStringToEnd\r\n};\r\n\r\nconst DEFAULT_VALIDATOR = {\r\n  version: validateVersion,\r\n  homepageURL: validateURL,\r\n  supportURL: validateURL,\r\n  updateURL: validateURL\r\n};\r\n\r\nconst DEFAULT_VAR_PARSER = {\r\n  text: parseStringToEnd,\r\n  color: parseStringToEnd,\r\n  checkbox: parseChar,\r\n  select: parseSelect,\r\n  dropdown: {\r\n    advanced: parseVarXStyle\r\n  },\r\n  image: {\r\n    var: parseSelect,\r\n    advanced: parseVarXStyle\r\n  },\r\n  number: parseRange,\r\n  range: parseRange\r\n};\r\n\r\nconst DEFAULT_VAR_VALIDATOR = {\r\n  checkbox: validateCheckbox,\r\n  number: validateRange,\r\n  range: validateRange\r\n};\r\n\r\nconst MANDATORY_META = ['name', 'namespace', 'version'];\r\nconst RANGE_PROPS = ['default', 'min', 'max', 'step'];\r\n\r\nfunction parseRange(state) {\r\n  parseJSON(state);\r\n  const result = {\r\n    min: null,\r\n    max: null,\r\n    step: null,\r\n    units: null\r\n  };\r\n  if (typeof state.value === 'number') {\r\n    result.default = state.value;\r\n  } else if (Array.isArray(state.value)) {\r\n    let i = 0;\r\n    for (const item of state.value) {\r\n      if (typeof item === 'string') {\r\n        if (result.units != null) {\r\n          throw new ParseError({\r\n            code: 'invalidRangeMultipleUnits',\r\n            message: 'units is alredy defined',\r\n            args: [state.type],\r\n            index: state.valueIndex\r\n          });\r\n        }\r\n\r\n        result.units = item;\r\n      } else if (typeof item === 'number' || item === null) {\r\n        if (i >= RANGE_PROPS.length) {\r\n          throw new ParseError({\r\n            code: 'invalidRangeTooManyValues',\r\n            message: 'the array contains too many values',\r\n            args: [state.type],\r\n            index: state.valueIndex\r\n          });\r\n        }\r\n\r\n        result[RANGE_PROPS[i++]] = item;\r\n      } else {\r\n        throw new ParseError({\r\n          code: 'invalidRangeValue',\r\n          message: 'value must be number, string, or null',\r\n          args: [state.type],\r\n          index: state.valueIndex\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    throw new ParseError({\r\n      code: 'invalidRange',\r\n      message: 'the default value must be an array or a number',\r\n      index: state.valueIndex,\r\n      args: [state.type]\r\n    });\r\n  }\r\n\r\n  state.value = result.default;\r\n  Object.assign(state.varResult, result);\r\n}\r\n\r\nfunction parseSelect(state) {\r\n  parseJSON(state);\r\n  if (typeof state.value !== 'object' || !state.value) {\r\n    throw new ParseError({\r\n      code: 'invalidSelect',\r\n      message: 'The value must be an array or object'\r\n    });\r\n  }\r\n\r\n  const options = Array.isArray(state.value) ?\r\n    state.value.map(key => createOption(key)) :\r\n    Object.keys(state.value).map(key => createOption(key, state.value[key]));\r\n  if (new Set(options.map(o => o.name)).size < options.length) {\r\n    throw new ParseError({\r\n      code: 'invalidSelectNameDuplicated',\r\n      message: 'Option name is duplicated'\r\n    });\r\n  }\r\n\r\n  if (options.length === 0) {\r\n    throw new ParseError({\r\n      code: 'invalidSelectEmptyOptions',\r\n      message: 'Option list is empty'\r\n    });\r\n  }\r\n\r\n  const defaults = options.filter(o => o.isDefault);\r\n  if (defaults.length > 1) {\r\n    throw new ParseError({\r\n      code: 'invalidSelectMultipleDefaults',\r\n      message: 'multiple default values'\r\n    });\r\n  }\r\n\r\n  options.forEach(o => {\r\n    delete o.isDefault;\r\n  });\r\n  state.varResult.options = options;\r\n  state.value = (defaults.length > 0 ? defaults[0] : options[0]).name;\r\n}\r\n\r\nfunction parseVarXStyle(state) {\r\n  const pos = state.lastIndex;\r\n  if (state.text[state.lastIndex] !== '{') {\r\n    throw new MissingCharError(['{'], pos);\r\n  }\r\n\r\n  const options = [];\r\n  state.lastIndex++;\r\n  while (state.text[state.lastIndex] !== '}') {\r\n    const option = {};\r\n\r\n    parseStringUnquoted(state);\r\n    option.name = state.value;\r\n\r\n    parseString(state);\r\n    option.label = state.value;\r\n\r\n    if (state.type === 'dropdown') {\r\n      parseEOT(state);\r\n    } else {\r\n      parseString(state);\r\n    }\r\n\r\n    option.value = state.value;\r\n\r\n    options.push(option);\r\n  }\r\n\r\n  state.lastIndex++;\r\n  eatWhitespace(state);\r\n  if (options.length === 0) {\r\n    throw new ParseError({\r\n      code: 'invalidSelectEmptyOptions',\r\n      message: 'Option list is empty',\r\n      index: pos\r\n    });\r\n  }\r\n\r\n  if (state.type === 'dropdown') {\r\n    state.varResult.type = 'select';\r\n    state.type = 'select';\r\n  }\r\n\r\n  state.varResult.options = options;\r\n  state.value = options[0].name;\r\n}\r\n\r\nfunction createOption(label, value) {\r\n  if (typeof label !== 'string' || value && typeof value !== 'string') {\r\n    throw new ParseError({\r\n      code: 'invalidSelectValue',\r\n      message: 'Values in the object/array must be strings'\r\n    });\r\n  }\r\n\r\n  let isDefault = false;\r\n  if (label.endsWith('*')) {\r\n    isDefault = true;\r\n    label = label.slice(0, -1);\r\n  }\r\n\r\n  let name;\r\n  const match = label.match(/^(\\w+):(.*)/);\r\n  if (match) {\r\n    ([, name, label] = match);\r\n  }\r\n\r\n  if (!name) {\r\n    name = label;\r\n  }\r\n\r\n  if (!label) {\r\n    throw new ParseError({\r\n      code: 'invalidSelectLabel',\r\n      message: 'Option label is empty'\r\n    });\r\n  }\r\n\r\n  if (value == null) {\r\n    value = name;\r\n  }\r\n\r\n  return {name, label, value, isDefault};\r\n}\r\n\r\nfunction collectErrors(fn, errors) {\r\n  if (errors) {\r\n    try {\r\n      fn();\r\n    } catch (err) {\r\n      errors.push(err);\r\n    }\r\n  } else {\r\n    fn();\r\n  }\r\n}\r\n\r\nfunction validateVersion(state) {\r\n  if (!isValidVersion(state.value)) {\r\n    throw new ParseError({\r\n      code: 'invalidVersion',\r\n      args: [state.value],\r\n      message: `Invalid version: ${state.value}`,\r\n      index: state.valueIndex\r\n    });\r\n  }\r\n\r\n  state.value = normalizeVersion(state.value);\r\n}\r\n\r\nfunction validateURL(state) {\r\n  let url;\r\n  try {\r\n    url = new URL(state.value);\r\n  } catch (err) {\r\n    err.args = [state.value];\r\n    err.index = state.valueIndex;\r\n    throw err;\r\n  }\r\n\r\n  if (!/^https?:/.test(url.protocol)) {\r\n    throw new ParseError({\r\n      code: 'invalidURLProtocol',\r\n      args: [url.protocol],\r\n      message: `Invalid protocol: ${url.protocol}`,\r\n      index: state.valueIndex\r\n    });\r\n  }\r\n}\r\n\r\nfunction validateCheckbox(state) {\r\n  if (state.value !== '1' && state.value !== '0') {\r\n    throw new ParseError({\r\n      code: 'invalidCheckboxDefault',\r\n      message: 'value must be 0 or 1',\r\n      index: state.valueIndex\r\n    });\r\n  }\r\n}\r\n\r\nfunction validateRange(state) {\r\n  const value = state.value;\r\n  if (typeof value !== 'number') {\r\n    throw new ParseError({\r\n      code: 'invalidRangeDefault',\r\n      message: `the default value of @var ${state.type} must be a number`,\r\n      index: state.valueIndex,\r\n      args: [state.type]\r\n    });\r\n  }\r\n\r\n  const result = state.varResult;\r\n  if (result.min != null && value < result.min) {\r\n    throw new ParseError({\r\n      code: 'invalidRangeMin',\r\n      message: 'the value is smaller than the minimum',\r\n      index: state.valueIndex,\r\n      args: [state.type]\r\n    });\r\n  }\r\n\r\n  if (result.max != null && value > result.max) {\r\n    throw new ParseError({\r\n      code: 'invalidRangeMax',\r\n      message: 'the value is larger than the maximum',\r\n      index: state.valueIndex,\r\n      args: [state.type]\r\n    });\r\n  }\r\n\r\n  if (\r\n    result.step != null &&\r\n    [value, result.min, result.max]\r\n      .some(n => n != null && !isMultipleOf(n, result.step))\r\n  ) {\r\n    throw new ParseError({\r\n      code: 'invalidRangeStep',\r\n      message: 'the value is not a multiple of the step',\r\n      index: state.valueIndex,\r\n      args: [state.type]\r\n    });\r\n  }\r\n\r\n  if (result.units && !UNITS_SET.has(result.units)) {\r\n    throw new ParseError({\r\n      code: 'invalidRangeUnits',\r\n      message: `Invalid CSS unit: ${result.units}`,\r\n      index: state.valueIndex,\r\n      args: [state.type, result.units]\r\n    });\r\n  }\r\n}\r\n\r\nfunction isMultipleOf(value, step) {\r\n  const n = Math.abs(value / step);\r\n  const nInt = Math.round(n);\r\n  // IEEE 754 double-precision numbers can reliably store 15 decimal digits\r\n  // of which some are already occupied by the integer part\r\n  return Math.abs(n - nInt) < Math.pow(10, (`${nInt}`.length - 16));\r\n}\r\n\r\nfunction createParser({\r\n  unknownKey = 'ignore',\r\n  mandatoryKeys = MANDATORY_META,\r\n  parseKey: userParseKey,\r\n  parseVar: userParseVar,\r\n  validateKey: userValidateKey,\r\n  validateVar: userValidateVar,\r\n  allowErrors = false\r\n} = {}) {\r\n  if (!['ignore', 'assign', 'throw'].includes(unknownKey)) {\r\n    throw new TypeError(\"unknownKey must be 'ignore', 'assign', or 'throw'\");\r\n  }\r\n\r\n  const parser = Object.assign(Object.create(null), DEFAULT_PARSER, userParseKey);\r\n  const keysOfParser = [...Object.keys(parser), 'advanced', 'var'];\r\n  const varParser = Object.assign({}, DEFAULT_VAR_PARSER, userParseVar);\r\n  const validator = Object.assign({}, DEFAULT_VALIDATOR, userValidateKey);\r\n  const varValidator = Object.assign({}, DEFAULT_VAR_VALIDATOR, userValidateVar);\r\n\r\n  return {parse, validateVar};\r\n\r\n  function validateVar(varObject) {\r\n    const state = {\r\n      key: 'var',\r\n      type: varObject.type,\r\n      value: varObject.value,\r\n      varResult: varObject\r\n    };\r\n    _validateVar(state);\r\n  }\r\n\r\n  function _validateVar(state) {\r\n    const validate = typeof varValidator[state.type] === 'object' ?\r\n      varValidator[state.type][state.key] : varValidator[state.type];\r\n    if (validate) {\r\n      validate(state);\r\n    }\r\n  }\r\n\r\n  function parseVar(state) {\r\n    const result = {\r\n      type: null,\r\n      label: null,\r\n      name: null,\r\n      value: null,\r\n      default: null,\r\n      options: null\r\n    };\r\n    state.varResult = result;\r\n\r\n    parseWord(state);\r\n    state.type = state.value;\r\n    result.type = state.type;\r\n\r\n    const doParse = typeof varParser[state.type] === 'object' ?\r\n      varParser[state.type][state.key] : varParser[state.type];\r\n    if (!doParse) {\r\n      throw new ParseError({\r\n        code: 'unknownVarType',\r\n        message: `Unknown @${state.key} type: ${state.type}`,\r\n        args: [state.key, state.type],\r\n        index: state.index\r\n      });\r\n    }\r\n\r\n    parseWord(state);\r\n    result.name = state.value;\r\n\r\n    parseString(state, true);\r\n    result.label = state.value;\r\n\r\n    state.valueIndex = state.lastIndex;\r\n    doParse(state);\r\n    _validateVar(state);\r\n    result.default = state.value;\r\n    if (!state.usercssData.vars) {\r\n      state.usercssData.vars = {};\r\n    }\r\n\r\n    state.usercssData.vars[result.name] = result;\r\n    if (state.key === 'advanced') {\r\n      state.maybeUSO = true;\r\n    }\r\n  }\r\n\r\n  function parse(text) {\r\n    if (text.includes('\\r')) {\r\n      throw new TypeError(\"metadata includes invalid character: '\\\\r'\");\r\n    }\r\n\r\n    const usercssData = {};\r\n    const errors = [];\r\n\r\n    const re = /@([\\w-]+)[^\\S\\r\\n]*/gm;\r\n    const state = {\r\n      index: 0,\r\n      lastIndex: 0,\r\n      text,\r\n      usercssData,\r\n      warn: err => errors.push(err)\r\n    };\r\n\r\n    // parse\r\n    let match;\r\n    while ((match = re.exec(text))) {\r\n      state.index = match.index;\r\n      state.lastIndex = re.lastIndex;\r\n      state.key = match[1];\r\n      state.shouldIgnore = false;\r\n\r\n      collectErrors(() => {\r\n        try {\r\n          if (state.key === 'var' || state.key === 'advanced') {\r\n            parseVar(state);\r\n          } else {\r\n            parseKey(state);\r\n          }\r\n        } catch (err) {\r\n          if (err.index === undefined) {\r\n            err.index = state.index;\r\n          }\r\n\r\n          throw err;\r\n        }\r\n\r\n        if (state.key !== 'var' && state.key !== 'advanced' && !state.shouldIgnore) {\r\n          usercssData[state.key] = state.value;\r\n        }\r\n      }, allowErrors && errors);\r\n\r\n      re.lastIndex = state.lastIndex;\r\n    }\r\n\r\n    if (state.maybeUSO && !usercssData.preprocessor) {\r\n      usercssData.preprocessor = 'uso';\r\n    }\r\n\r\n    collectErrors(() => {\r\n      const missing = mandatoryKeys.filter(k =>\r\n        !Object.prototype.hasOwnProperty.call(usercssData, k) || !usercssData[k]\r\n      );\r\n      if (missing.length > 0) {\r\n        throw new ParseError({\r\n          code: 'missingMandatory',\r\n          args: missing,\r\n          message: `Missing metadata: ${missing.map(k => `@${k}`).join(', ')}`\r\n        });\r\n      }\r\n    }, allowErrors && errors);\r\n\r\n    return {\r\n      metadata: usercssData,\r\n      errors\r\n    };\r\n  }\r\n\r\n  function parseKey(state) {\r\n    let doParse = parser[state.key];\r\n    if (!doParse) {\r\n      if (unknownKey === 'assign') {\r\n        doParse = parseStringToEnd;\r\n      } else {\r\n        eatLine(state);\r\n        if (unknownKey === 'ignore') {\r\n          state.shouldIgnore = true;\r\n          return;\r\n        }\r\n\r\n        // TODO: Suggest the item with the smallest distance or even multiple results?\r\n        // Implementation note: swtich to Levenshtein automaton variation.\r\n        const MAX_EDIT = Math.log2(state.key.length);\r\n        const maybeSuggestion = keysOfParser.find(metaKey => LevenshteinDistanceWithMax(metaKey, state.key, MAX_EDIT));\r\n\r\n        // throw\r\n        throw new ParseError({\r\n          code: 'unknownMeta',\r\n          args: [state.key, maybeSuggestion],\r\n          message: `Unknown metadata: @${state.key}${maybeSuggestion ? `, did you mean @${maybeSuggestion}?` : ''}`,\r\n          index: state.index\r\n        });\r\n      }\r\n    }\r\n\r\n    state.valueIndex = state.lastIndex;\r\n    doParse(state);\r\n    if (validator[state.key]) {\r\n      validator[state.key](state);\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeVersion(version) {\r\n  // https://docs.npmjs.com/misc/semver#versions\r\n  if (version[0] === 'v' || version[0] === '=') {\r\n    return version.slice(1);\r\n  }\r\n\r\n  return version;\r\n}\r\n\r\nmodule.exports = {\r\n  parse(text, options) {\r\n    return createParser(options).parse(text);\r\n  },\r\n  createParser,\r\n  isMultipleOf,\r\n};\r\n","module.exports = ['em', 'ex', 'cap', 'ch', 'ic', 'rem', 'lh', 'rlh', 'vw', 'vh', 'vi', 'vb', 'vmin', 'vmax', 'cm', 'mm', 'Q', 'in', 'pt', 'pc', 'px', 'deg', 'grad', 'rad', 'turn', 's', 'ms', 'Hz', 'kHz', 'dpi', 'dpcm', 'dppx', '%'];\n","/**\r\n * Gives you a array with filled with 0...amount - 1.\r\n * @param {number} amount\r\n * @returns {number[]}\r\n */\r\nfunction range(amount) {\r\n  const range = Array(amount);\r\n  for (let i = 0; i < amount; i++) {\r\n    range[i] = i;\r\n  }\r\n\r\n  return range;\r\n}\r\n\r\n/**\r\n * Check if the amount of edits between firstString and secondString is <= maxEdits.\r\n * It uses the Levenshtein distance algorithm with the two matrix rows variant.\r\n * @param {string} firstString First string to be checked against the other string\r\n * @param {string} secondString Second string to be checked against the other string\r\n * @param {number} maxEdit The maximum amount of edits that these 2 string should have.\r\n * @returns {boolean} indicate if the 2 strings's edits are less or equal to maxEdits\r\n */\r\nfunction LevenshteinDistanceWithMax(firstString, secondString, maxEdit) {\r\n  const lenOne = firstString.length;\r\n  const lenTwo = secondString.length;\r\n\r\n  const lenDiff = Math.abs(lenOne - lenTwo);\r\n  // Are the difference between 2 lengths greater than\r\n  // maxEdit, we know to bail out early on.\r\n  if (lenDiff > maxEdit) {\r\n    return false;\r\n  }\r\n\r\n  let prevRowDistance = range(lenOne + 1);\r\n  let currentRowDistance = Array(lenOne + 1);\r\n  for (let i = 1; i <= lenTwo; i++) {\r\n    // Calculate the current row distances from the previous row.\r\n    currentRowDistance[0] = i;\r\n    let minDistance = i;\r\n    for (let j = 1; j <= lenOne; j++) {\r\n      const editCost = firstString[j - 1] === secondString[i - 1] ? 0 : 1;\r\n\r\n      const addCost = prevRowDistance[j] + 1;\r\n      const delCost = currentRowDistance[j - 1] + 1;\r\n      const substitionCost = prevRowDistance[j - 1] + editCost;\r\n\r\n      currentRowDistance[j] = Math.min(addCost, delCost, substitionCost);\r\n      if (currentRowDistance[j] < minDistance) {\r\n        minDistance = currentRowDistance[j];\r\n      }\r\n    }\r\n\r\n    if (minDistance > maxEdit) {\r\n      return false;\r\n    }\r\n\r\n    // Swap the vectors\r\n    const vtemp = currentRowDistance;\r\n    currentRowDistance = prevRowDistance;\r\n    prevRowDistance = vtemp;\r\n  }\r\n\r\n  return prevRowDistance[lenOne] <= maxEdit;\r\n}\r\n\r\nmodule.exports = {\r\n  LevenshteinDistanceWithMax\r\n};\r\n","function createStringifier({\r\n  alignKeys = false,\r\n  space = 2,\r\n  format = 'stylus',\r\n  stringifyKey: userStringifyKey = {},\r\n  stringifyVar: userStringifyVar = {}\r\n} = {}) {\r\n  function stringify(meta) {\r\n    let varKey;\r\n    if (format === 'stylus') {\r\n      varKey = 'var';\r\n    } else if (format === 'xstyle') {\r\n      varKey = 'advanced';\r\n    } else {\r\n      throw new TypeError(\"options.format must be 'stylus' or 'xstyle'\");\r\n    }\r\n\r\n    const lines = [];\r\n    for (const key of Object.keys(meta)) {\r\n      const value = meta[key];\r\n      if (Object.prototype.hasOwnProperty.call(userStringifyKey, key)) {\r\n        const result = userStringifyKey[key](value);\r\n        if (Array.isArray(result)) {\r\n          lines.push.apply(lines, result.map(v => [key, v]));\r\n        } else {\r\n          lines.push([key, result]);\r\n        }\r\n      } else if (key === 'vars') {\r\n        for (const va of Object.values(value)) {\r\n          lines.push([varKey, stringifyVar(va, format, userStringifyVar, space)]);\r\n        }\r\n      } else if (Array.isArray(value)) {\r\n        for (const subLine of value) {\r\n          lines.push([key, quoteIfNeeded(subLine)]);\r\n        }\r\n      } else {\r\n        lines.push([key, quoteIfNeeded(value)]);\r\n      }\r\n    }\r\n\r\n    const maxKeyLength = alignKeys ? Math.max.apply(null, lines.map(l => l[0].length)) : 0;\r\n    return `/* ==UserStyle==\\n${\r\n      escapeComment(lines.map(([key, text]) => `@${key.padEnd(maxKeyLength)} ${text}`).join('\\n'))\r\n    }\\n==/UserStyle== */`;\r\n  }\r\n\r\n  return {stringify};\r\n}\r\n\r\nfunction stringifyVar(va, format, userStringifyVar, space) {\r\n  return `${vaType()} ${va.name} ${JSON.stringify(va.label)} ${vaDefault()}`;\r\n\r\n  function vaType() {\r\n    if (format === 'xstyle' && va.type === 'select') {\r\n      return 'dropdown';\r\n    }\r\n\r\n    return va.type;\r\n  }\r\n\r\n  function vaDefault() {\r\n    if (Object.prototype.hasOwnProperty.call(userStringifyVar, va.type)) {\r\n      return userStringifyVar[va.type](va, format, space);\r\n    }\r\n\r\n    if (va.options) {\r\n      if (format === 'stylus') {\r\n        return JSON.stringify(va.options.reduce((object, opt) => {\r\n          const isDefault = opt.name === va.default ? '*' : '';\r\n          object[`${opt.name}:${opt.label}${isDefault}`] = opt.value;\r\n          return object;\r\n        }, {}), null, space);\r\n      }\r\n\r\n      return stringifyEOT(va.options, va.type === 'image', space);\r\n    }\r\n\r\n    if (va.type === 'text' && format === 'xstyle') {\r\n      return JSON.stringify(va.default);\r\n    }\r\n\r\n    if (va.type === 'number' || va.type === 'range') {\r\n      const output = [va.default, va.min, va.max, va.step];\r\n      if (va.units) {\r\n        output.push(va.units);\r\n      }\r\n\r\n      return JSON.stringify(output);\r\n    }\r\n\r\n    return va.default;\r\n  }\r\n}\r\n\r\nfunction quoteIfNeeded(text) {\r\n  if (typeof text === 'string' && text.includes('\\n')) {\r\n    return JSON.stringify(text);\r\n  }\r\n\r\n  return text;\r\n}\r\n\r\nfunction escapeComment(text) {\r\n  return text.replace(/\\*\\//g, '*\\\\/');\r\n}\r\n\r\nfunction stringifyEOT(options, singleLine = false, space = 0) {\r\n  const pad = typeof space === 'string' ? space : ' '.repeat(space);\r\n  return `{\\n${options.map(\r\n    o => `${pad}${o.name} ${JSON.stringify(o.label)} ${oValue(o.value)}`\r\n  ).join('\\n')}\\n}`;\r\n\r\n  function oValue(value) {\r\n    if (singleLine) {\r\n      return JSON.stringify(value);\r\n    }\r\n\r\n    return `<<<EOT\\n${value} EOT;`;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  stringify(meta, options) {\r\n    return createStringifier(options).stringify(meta);\r\n  },\r\n  createStringifier\r\n};\r\n"],"names":["ParseError","Error","constructor","err","super","message","this","name","Object","assign","MissingCharError","chars","index","code","args","map","c","join","EOFError","RX_EOT","RX_LINE","RX_NUMBER","RX_WHITESPACE","RX_WHITESPACE_SAMELINE","RX_WORD","RX_STRING_BACKTICK","RX_STRING_QUOTED","RX_STRING_UNQUOTED","RX_VERSION","JSON_PRIME","__proto__","null","true","false","unescapeComment","s","replace","unquote","q","length","slice","RegExp","JSON","parse","eatLine","state","lastIndex","exec","text","eatWhitespace","parseChar","value","parseWord","pos","match","parseJSON","parseJSONValue","parseEOT","trim","parseStringUnquoted","parseString","sameLine","rx","eatSameLineWhitespace","object","key","array","push","test","parseNumber","Number","parseStringToEnd","isValidVersion","version","self","URL","UNITS_SET","Set","DEFAULT_PARSER","namespace","author","description","homepageURL","supportURL","updateURL","license","preprocessor","DEFAULT_VALIDATOR","valueIndex","validateURL","DEFAULT_VAR_PARSER","color","checkbox","select","parseSelect","dropdown","advanced","parseVarXStyle","image","var","number","parseRange","range","DEFAULT_VAR_VALIDATOR","validateRange","MANDATORY_META","RANGE_PROPS","result","min","max","step","units","default","Array","isArray","type","i","item","varResult","options","createOption","keys","o","size","defaults","filter","isDefault","forEach","option","label","endsWith","collectErrors","fn","errors","url","protocol","some","n","Math","abs","nInt","round","pow","isMultipleOf","has","createParser","unknownKey","mandatoryKeys","parseKey","userParseKey","parseVar","userParseVar","validateKey","userValidateKey","validateVar","userValidateVar","allowErrors","includes","TypeError","parser","create","keysOfParser","varParser","validator","varValidator","usercssData","re","warn","shouldIgnore","undefined","maybeUSO","missing","k","prototype","hasOwnProperty","call","metadata","varObject","_validateVar","validate","doParse","vars","MAX_EDIT","log2","maybeSuggestion","find","metaKey","firstString","secondString","maxEdit","lenOne","lenTwo","prevRowDistance","amount","currentRowDistance","minDistance","j","editCost","addCost","delCost","substitionCost","vtemp","LevenshteinDistanceWithMax","createStringifier","alignKeys","space","format","stringifyKey","userStringifyKey","stringifyVar","userStringifyVar","stringify","meta","varKey","lines","apply","v","va","values","subLine","quoteIfNeeded","maxKeyLength","l","padEnd","reduce","opt","singleLine","pad","repeat","stringifyEOT","output","vaDefault"],"mappings":"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"}