var d=n=>{let e=0;for(let s of n)e+=s*s;return Math.sqrt(e/n.length)},f=n=>Math.pow(10,n/20);var r={CLOSED:0,OPEN:1,CLOSING:2},y=({openThreshold:n,closeThreshold:e,holdMs:s,bufferMs:i})=>{let m=f(n),p=f(e),O=Math.ceil(s/i),o=r.CLOSED,c=0;return{next:t=>{switch(o){case r.CLOSED:t>m&&(o=r.OPEN);break;case r.OPEN:t<p&&(o=r.CLOSING,c=0);break;case r.CLOSING:t>p?o=r.OPEN:c>O?o=r.CLOSED:c++;break;default:console.error(`Unknown state: ${o}`)}},isOpen:()=>o===r.OPEN||o===r.CLOSING}};var S=({openThreshold:n,closeThreshold:e,holdMs:s,maxChannels:i},m)=>{let p=y({openThreshold:n,closeThreshold:e,holdMs:s,bufferMs:m});return{process:(o,c)=>{let a=Math.min(o.length,i),h=0;for(let t=0;t<a;t++)h+=d(o[t])/a;if(p.next(h),p.isOpen())for(let t=0;t<a;t++)c[t].set(o[t])}}};var P="@sapphi-red/web-noise-suppressor/noise-gate";var b=128,u=class extends AudioWorkletProcessor{constructor(e){super();let s=1e3/sampleRate*b;this.processor=S(e.processorOptions,s)}process(e,s,i){return e.length===0||!e[0]||e[0]?.length===0||this.processor.process(e[0],s[0]),!0}};registerProcessor(P,u);
//# sourceMappingURL=workletProcessor.js.map