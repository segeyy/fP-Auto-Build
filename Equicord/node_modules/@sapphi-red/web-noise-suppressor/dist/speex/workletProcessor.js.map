{"version":3,"sources":["<define:window>","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.4/node_modules/@sapphi-red/speex-preprocess-wasm/src/SpeexPreprocessCtlRequest.ts","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.4/node_modules/@sapphi-red/speex-preprocess-wasm/src/SpeexPreprocessor.ts","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.4/node_modules/@sapphi-red/speex-preprocess-wasm/wasm-out/speex.js","../../src/speex/processor.ts","../../src/speex/workletUtil.ts","../../src/speex/workletProcessor.ts"],"sourcesContent":["","export const SpeexPreprocessCtlRequest = {\n  /** Set preprocessor denoiser state */\n  SET_DENOISE: 0,\n  /** Get preprocessor denoiser state */\n  GET_DENOISE: 1,\n\n  /** Set preprocessor Automatic Gain Control state */\n  SET_AGC: 2,\n  /** Get preprocessor Automatic Gain Control state */\n  GET_AGC: 3,\n\n  /** Set preprocessor Voice Activity Detection state */\n  SET_VAD: 4,\n  /** Get preprocessor Voice Activity Detection state */\n  GET_VAD: 5,\n\n  /** Set preprocessor Automatic Gain Control level (float) */\n  SET_AGC_LEVEL: 6,\n  /** Get preprocessor Automatic Gain Control level (float) */\n  GET_AGC_LEVEL: 7,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb state */\n  // SET_DEREVERB: 8,\n  // /** Get preprocessor dereverb state */\n  // GET_DEREVERB: 9,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb level */\n  // SET_DEREVERB_LEVEL: 10,\n  // /** Get preprocessor dereverb level */\n  // GET_DEREVERB_LEVEL: 11,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb decay */\n  // SET_DEREVERB_DECAY: 12,\n  // /** Get preprocessor dereverb decay */\n  // GET_DEREVERB_DECAY: 13,\n\n  /** Set probability required for the VAD to go from silence to voice */\n  SET_PROB_START: 14,\n  /** Get probability required for the VAD to go from silence to voice */\n  GET_PROB_START: 15,\n\n  /** Set probability required for the VAD to stay in the voice state (integer percent) */\n  SET_PROB_CONTINUE: 16,\n  /** Get probability required for the VAD to stay in the voice state (integer percent) */\n  GET_PROB_CONTINUE: 17,\n\n  /** Set maximum attenuation of the noise in dB (negative number) */\n  SET_NOISE_SUPPRESS: 18,\n  /** Get maximum attenuation of the noise in dB (negative number) */\n  GET_NOISE_SUPPRESS: 19,\n\n  /** Set maximum attenuation of the residual echo in dB (negative number) */\n  SET_ECHO_SUPPRESS: 20,\n  /** Get maximum attenuation of the residual echo in dB (negative number) */\n  GET_ECHO_SUPPRESS: 21,\n\n  /** Set maximum attenuation of the residual echo in dB when near end is active (negative number) */\n  SET_ECHO_SUPPRESS_ACTIVE: 22,\n  /** Get maximum attenuation of the residual echo in dB when near end is active (negative number) */\n  GET_ECHO_SUPPRESS_ACTIVE: 23,\n\n  // NOTE: needs SpeexEchoState pointer\n  // /** Set the corresponding echo canceller state so that residual echo suppression can be performed (NULL for no residual echo suppression) */\n  // SET_ECHO_STATE: 24,\n  // /** Get the corresponding echo canceller state */\n  // GET_ECHO_STATE: 25,\n\n  /** Set maximal gain increase in dB/second (int32) */\n  SET_AGC_INCREMENT: 26,\n\n  /** Get maximal gain increase in dB/second (int32) */\n  GET_AGC_INCREMENT: 27,\n\n  /** Set maximal gain decrease in dB/second (int32) */\n  SET_AGC_DECREMENT: 28,\n\n  /** Get maximal gain decrease in dB/second (int32) */\n  GET_AGC_DECREMENT: 29,\n\n  /** Set maximal gain in dB (int32) */\n  SET_AGC_MAX_GAIN: 30,\n\n  /** Get maximal gain in dB (int32) */\n  GET_AGC_MAX_GAIN: 31,\n\n  /*  Can't set loudness */\n  /** Get loudness */\n  GET_AGC_LOUDNESS: 33,\n\n  /*  Can't set gain */\n  /** Get current gain (int32 percent) */\n  GET_AGC_GAIN: 35,\n\n  /*  Can't set spectrum size */\n  /** Get spectrum size for power spectrum (int32) */\n  GET_PSD_SIZE: 37,\n\n  /*  Can't set power spectrum */\n  /** Get power spectrum (int32[] of squared values) */\n  GET_PSD: 39,\n\n  /*  Can't set noise size */\n  /** Get spectrum size for noise estimate (int32)  */\n  GET_NOISE_PSD_SIZE: 41,\n\n  /*  Can't set noise estimate */\n  /** Get noise estimate (int32[] of squared values) */\n  GET_NOISE_PSD: 43,\n\n  /* Can't set speech probability */\n  /** Get speech probability in last frame (int32).  */\n  GET_PROB: 45,\n\n  /** Set preprocessor Automatic Gain Control level (int32) */\n  SET_AGC_TARGET: 46,\n  /** Get preprocessor Automatic Gain Control level (int32) */\n  GET_AGC_TARGET: 47\n} as const\n\nexport type SpeexPreprocessCtlRequest =\n  (typeof SpeexPreprocessCtlRequest)[keyof typeof SpeexPreprocessCtlRequest]\n","import {\n  SpeexModule,\n  SpeexPreprocessState,\n  F32Ptr,\n  I16Ptr,\n  I32Ptr\n} from '../wasm-out/speex'\nimport { SpeexPreprocessCtlRequest } from './SpeexPreprocessCtlRequest'\n\nexport type LoadOptions = Pick<SpeexModule, 'locateFile' | 'wasmBinary'>\n\nconst I16_BYTE_SIZE = Int16Array.BYTES_PER_ELEMENT\nconst I32_BYTE_SIZE = Int32Array.BYTES_PER_ELEMENT\nconst F32_BYTE_SIZE = Float32Array.BYTES_PER_ELEMENT\n\nconst I16_MAX_NUMBER = 2 ** 16 / 2 - 1\n\nexport default class SpeexPreprocessor {\n  private readonly speexModule: Readonly<SpeexModule>\n  readonly frameSize: number\n  readonly samplingRate: number\n\n  private readonly state: SpeexPreprocessState\n  private processBuffPtr: I16Ptr\n  private processI16Buff: Int16Array\n\n  private ctlBuffPtr?: I32Ptr | F32Ptr\n\n  constructor(\n    speexModule: Readonly<SpeexModule>,\n    frameSize: number,\n    samplingRate: number\n  ) {\n    this.speexModule = speexModule\n    this.frameSize = frameSize\n    this.samplingRate = samplingRate\n\n    this.state = this.speexModule._speex_preprocess_state_init(\n      this.frameSize,\n      this.samplingRate\n    )\n    this.processBuffPtr = this.speexModule._malloc(\n      this.frameSize * I16_BYTE_SIZE\n    )\n    this.processI16Buff = new Int16Array(this.frameSize)\n\n    if (!this.processBuffPtr) {\n      this.destroy()\n      throw Error('Failed to allocate process buffer.')\n    }\n  }\n\n  private mallocCtlBuffPtr() {\n    if (this.ctlBuffPtr !== undefined) return\n    this.ctlBuffPtr = this.speexModule._malloc(\n      4 /** I32_BYTE_SIZE && F32_BYTE_SIZE */\n    )\n\n    if (!this.ctlBuffPtr) {\n      throw Error('Failed to allocate ctl buffer.')\n    }\n  }\n\n  private ctl(req: SpeexPreprocessCtlRequest, output?: unknown) {\n    const res = this.speexModule._speex_preprocess_ctl(this.state, req, output)\n    if (res === -1) {\n      throw new Error(`Unknown request: ${req}`)\n    }\n  }\n\n  private ctlGetI32(req: SpeexPreprocessCtlRequest) {\n    this.mallocCtlBuffPtr()\n\n    const ctlBuffIndex = this.ctlBuffPtr! / I32_BYTE_SIZE\n\n    this.ctl(req, this.ctlBuffPtr!)\n    return this.speexModule.HEAP32[ctlBuffIndex]!\n  }\n  private ctlSetI32(req: SpeexPreprocessCtlRequest, value: number) {\n    this.mallocCtlBuffPtr()\n\n    const ctlBuffIndex = this.ctlBuffPtr! / I32_BYTE_SIZE\n    this.speexModule.HEAP32[ctlBuffIndex] = value\n\n    this.ctl(req, this.ctlBuffPtr!)\n  }\n\n  private ctlGetBool(req: SpeexPreprocessCtlRequest) {\n    return this.ctlGetI32(req) === 1\n  }\n  private ctlSetBool(req: SpeexPreprocessCtlRequest, value: boolean) {\n    this.ctlSetI32(req, value ? 1 : 0)\n  }\n\n  private ctlGetF32(req: SpeexPreprocessCtlRequest) {\n    this.mallocCtlBuffPtr()\n\n    const ctlBuffIndex = this.ctlBuffPtr! / F32_BYTE_SIZE\n\n    this.ctl(req, this.ctlBuffPtr!)\n    return this.speexModule.HEAPF32[ctlBuffIndex]!\n  }\n  private ctlSetF32(req: SpeexPreprocessCtlRequest, value: number) {\n    this.mallocCtlBuffPtr()\n\n    const ctlBuffIndex = this.ctlBuffPtr! / F32_BYTE_SIZE\n    this.speexModule.HEAPF32[ctlBuffIndex] = value\n\n    this.ctl(req, this.ctlBuffPtr!)\n  }\n\n  private ctlGetI32Array(req: SpeexPreprocessCtlRequest, size: number) {\n    const buffPtr = this.speexModule._malloc(size * I32_BYTE_SIZE)\n    const buffIndex = buffPtr / I32_BYTE_SIZE\n\n    this.ctl(req, buffPtr)\n\n    const result = new Int32Array(size)\n    const res = this.speexModule.HEAP32.subarray(buffIndex, buffIndex + size)\n    result.set(res)\n\n    this.speexModule._free(buffPtr)\n\n    return result\n  }\n\n  get denoise() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_DENOISE)\n  }\n  set denoise(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_DENOISE, value)\n  }\n\n  get agc() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_AGC)\n  }\n  set agc(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_AGC, value)\n  }\n\n  get vad() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_VAD)\n  }\n  set vad(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_VAD, value)\n  }\n\n  get agcLevel() {\n    return this.ctlGetF32(SpeexPreprocessCtlRequest.GET_AGC_LEVEL)\n  }\n  set agcLevel(value: number) {\n    this.ctlSetF32(SpeexPreprocessCtlRequest.SET_AGC_LEVEL, value)\n  }\n\n  get probStart() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB_START)\n  }\n  set probStart(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_PROB_START, value)\n  }\n\n  get probContinue() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB_CONTINUE)\n  }\n  set probContinue(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_PROB_CONTINUE, value)\n  }\n\n  get noiseSuppress() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_NOISE_SUPPRESS)\n  }\n  set noiseSuppress(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_NOISE_SUPPRESS, value)\n  }\n\n  get echoSuppress() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_ECHO_SUPPRESS)\n  }\n  set echoSuppress(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_ECHO_SUPPRESS, value)\n  }\n\n  get echoSuppressActive() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_ECHO_SUPPRESS_ACTIVE)\n  }\n  set echoSuppressActive(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_ECHO_SUPPRESS_ACTIVE, value)\n  }\n\n  get agcIncrement() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_INCREMENT)\n  }\n  set agcIncrement(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_INCREMENT, value)\n  }\n\n  get agcDecrement() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_DECREMENT)\n  }\n  set agcDecrement(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_DECREMENT, value)\n  }\n\n  get agcMaxGain() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_MAX_GAIN)\n  }\n  set agcMaxGain(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_MAX_GAIN, value)\n  }\n\n  get agcLoudness() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_LOUDNESS)\n  }\n\n  get agcGain() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_GAIN)\n  }\n\n  get psdSize() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PSD_SIZE)\n  }\n\n  get psd() {\n    return this.ctlGetI32Array(SpeexPreprocessCtlRequest.GET_PSD, this.psdSize)\n  }\n\n  get noisePsdSize() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_NOISE_PSD_SIZE)\n  }\n\n  get noisePsd() {\n    return this.ctlGetI32Array(\n      SpeexPreprocessCtlRequest.GET_NOISE_PSD,\n      this.noisePsdSize\n    )\n  }\n\n  get prob() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB)\n  }\n\n  get agcTarget() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_TARGET)\n  }\n  set agcTarget(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_TARGET, value)\n  }\n\n  private assertFrameSize(frame: ArrayLike<number>) {\n    if (frame.length !== this.frameSize) {\n      throw new Error(\n        `Frame size differs. Expected: ${this.frameSize}. Actual: ${frame.length}.`\n      )\n    }\n  }\n\n  processInt16(frame: Int16Array) {\n    this.assertFrameSize(frame)\n\n    const processBuffIndex = this.processBuffPtr / I16_BYTE_SIZE\n    this.speexModule.HEAP16.set(frame, processBuffIndex)\n\n    const vad = this.speexModule._speex_preprocess_run(\n      this.state,\n      this.processBuffPtr\n    )\n    const processedBuff = this.speexModule.HEAP16.subarray(\n      processBuffIndex,\n      processBuffIndex + this.frameSize\n    )\n    frame.set(processedBuff)\n\n    return vad === 1\n  }\n\n  process(frame: Float32Array) {\n    this.assertFrameSize(frame)\n\n    for (let i = 0; i < frame.length; i++) {\n      this.processI16Buff[i] = frame[i]! * I16_MAX_NUMBER\n    }\n\n    const vad = this.processInt16(this.processI16Buff)\n\n    for (let i = 0; i < frame.length; i++) {\n      frame[i] = this.processI16Buff[i]! / I16_MAX_NUMBER\n    }\n\n    return vad\n  }\n\n  destroy() {\n    this.speexModule._free(this.processBuffPtr)\n    if (this.ctlBuffPtr !== undefined) {\n      this.speexModule._free(this.ctlBuffPtr)\n    }\n  }\n}\n","\nvar Module = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=console.log.bind(console);var err=console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){callRuntimeCallbacks(__ATPOSTRUN__)}function addOnInit(cb){__ATINIT__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++}function removeRunDependency(id){runDependencies--;if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"speex.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"speex.wasm\",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw`failed to load wasm binary file at '${binaryFile}'`}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"f\"];updateMemoryViews();addOnInit(wasmExports[\"g\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var _emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var _fd_close=fd=>52;var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);return 70}var printCharBuffers=[null,[],[]];var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var SYSCALLS={varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret}};var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};var wasmImports={d:_emscripten_memcpy_js,e:_emscripten_resize_heap,c:_fd_close,b:_fd_seek,a:_fd_write};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"g\"])();var _speex_preprocess_state_init=Module[\"_speex_preprocess_state_init\"]=(a0,a1)=>(_speex_preprocess_state_init=Module[\"_speex_preprocess_state_init\"]=wasmExports[\"h\"])(a0,a1);var _speex_preprocess_state_destroy=Module[\"_speex_preprocess_state_destroy\"]=a0=>(_speex_preprocess_state_destroy=Module[\"_speex_preprocess_state_destroy\"]=wasmExports[\"i\"])(a0);var _speex_preprocess_run=Module[\"_speex_preprocess_run\"]=(a0,a1)=>(_speex_preprocess_run=Module[\"_speex_preprocess_run\"]=wasmExports[\"j\"])(a0,a1);var _speex_preprocess_ctl=Module[\"_speex_preprocess_ctl\"]=(a0,a1,a2)=>(_speex_preprocess_ctl=Module[\"_speex_preprocess_ctl\"]=wasmExports[\"k\"])(a0,a1,a2);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"l\"])(a0);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"m\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);postRun()}{doRun()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\nexport default Module;","import {\n  SpeexPreprocessor,\n  type SpeexModule\n} from '@sapphi-red/speex-preprocess-wasm'\nimport type { Process } from '../utils/process'\n\nexport const createProcessor = (\n  module: SpeexModule,\n  {\n    bufferSize,\n    maxChannels,\n    sampleRate\n  }: { bufferSize: number; maxChannels: number; sampleRate: number }\n) => {\n  const preprocessors = Array.from(\n    { length: maxChannels },\n    () => new SpeexPreprocessor(module, bufferSize, sampleRate)\n  )\n  for (const preprocessor of preprocessors) {\n    preprocessor.denoise = true\n  }\n\n  const getProperty = <K extends keyof SpeexPreprocessor>(\n    k: K\n  ): SpeexPreprocessor[K] => {\n    return preprocessors[0]![k]\n  }\n  const setProperty = <K extends keyof SpeexPreprocessor>(\n    k: K,\n    v: SpeexPreprocessor[K]\n  ) => {\n    for (const preprocessor of preprocessors) {\n      preprocessor[k] = v\n    }\n  }\n  const destroy = () => {\n    for (const preprocessor of preprocessors) {\n      preprocessor.destroy()\n    }\n  }\n\n  const process: Process = (input, output) => {\n    const channels = Math.min(input.length, maxChannels)\n    for (let i = 0; i < channels; i++) {\n      preprocessors[i]!.process(input[i]!)\n\n      output[i]!.set(input[i]!)\n    }\n  }\n\n  return { process, getProperty, setProperty, destroy }\n}\n","import type { TypedAudioWorkletOptions } from '../utils/TypedAudioWorklet'\nimport type { SpeexProcessorOptions } from './options'\n\nexport const id = '@sapphi-red/web-noise-suppressor/speex'\n\nexport type SpeexWorkletOptions =\n  TypedAudioWorkletOptions<SpeexProcessorOptions>\n","import { loadSpeexModule } from '@sapphi-red/speex-preprocess-wasm'\nimport type { Process } from '../utils/process'\nimport { createProcessor } from './processor'\nimport { id, type SpeexWorkletOptions } from './workletUtil'\n\nconst AudioWorkletBufferSize = 128\n\nclass SpeexWorkletProcessor extends AudioWorkletProcessor {\n  private processor: { process: Process; destroy: () => void } | undefined\n  private destroyed = false\n\n  constructor(options: SpeexWorkletOptions) {\n    super()\n\n    this.port.addEventListener('message', e => {\n      if (e.data === 'destroy') {\n        this.destroy()\n      }\n    })\n\n    // load\n    ;(async () => {\n      const speexModule = await loadSpeexModule({\n        locateFile: (file: string) => file,\n        wasmBinary: options.processorOptions.wasmBinary\n      })\n      this.processor = createProcessor(speexModule, {\n        bufferSize: AudioWorkletBufferSize,\n        maxChannels: options.processorOptions.maxChannels,\n        sampleRate: sampleRate\n      })\n      if (this.destroyed) {\n        this.destroy()\n      }\n    })()\n    // TODO: getProperty, setProperty\n  }\n\n  process(\n    inputs: Float32Array[][],\n    outputs: Float32Array[][],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _parameters: unknown\n  ) {\n    if (inputs.length === 0 || !inputs[0] || inputs[0]?.length === 0) {\n      // no input connected\n      return true\n    }\n    if (!this.processor) {\n      // ignore because loading\n      return true\n    }\n\n    this.processor.process(inputs[0]!, outputs[0]!)\n    return true\n  }\n\n  private destroy() {\n    this.destroyed = true\n    this.processor?.destroy()\n    this.processor = undefined\n  }\n}\n\nregisterProcessor(id, SpeexWorkletProcessor)\n"],"mappings":"AAAA,IAAAA,EAAA,CAAC,ECAM,IAAMC,EAA4B,CAEvC,YAAa,EAEb,YAAa,EAGb,QAAS,EAET,QAAS,EAGT,QAAS,EAET,QAAS,EAGT,cAAe,EAEf,cAAe,EAqBf,eAAgB,GAEhB,eAAgB,GAGhB,kBAAmB,GAEnB,kBAAmB,GAGnB,mBAAoB,GAEpB,mBAAoB,GAGpB,kBAAmB,GAEnB,kBAAmB,GAGnB,yBAA0B,GAE1B,yBAA0B,GAS1B,kBAAmB,GAGnB,kBAAmB,GAGnB,kBAAmB,GAGnB,kBAAmB,GAGnB,iBAAkB,GAGlB,iBAAkB,GAIlB,iBAAkB,GAIlB,aAAc,GAId,aAAc,GAId,QAAS,GAIT,mBAAoB,GAIpB,cAAe,GAIf,SAAU,GAGV,eAAgB,GAEhB,eAAgB,EAClB,EC7GMC,EAAgB,WAAW,kBAC3BC,EAAgB,WAAW,kBAC3BC,EAAgB,aAAa,kBAE7BC,EAAiB,GAAK,GAAK,EAAI,EAEhBC,EAArB,KAAuC,CAWrC,YACEC,EACAC,EACAC,EACA,CAcA,GAbA,KAAK,YAAcF,EACnB,KAAK,UAAYC,EACjB,KAAK,aAAeC,EAEpB,KAAK,MAAQ,KAAK,YAAY,6BAC5B,KAAK,UACL,KAAK,YACP,EACA,KAAK,eAAiB,KAAK,YAAY,QACrC,KAAK,UAAYP,CACnB,EACA,KAAK,eAAiB,IAAI,WAAW,KAAK,SAAS,EAE/C,CAAC,KAAK,eACR,WAAK,QAAQ,EACP,MAAM,oCAAoC,CAEpD,CAEQ,kBAAmB,CACzB,GAAI,KAAK,aAAe,SACxB,KAAK,WAAa,KAAK,YAAY,QACjC,CACF,EAEI,CAAC,KAAK,YACR,MAAM,MAAM,gCAAgC,CAEhD,CAEQ,IAAIQ,EAAgCC,EAAkB,CAE5D,GADY,KAAK,YAAY,sBAAsB,KAAK,MAAOD,EAAKC,CAAM,IAC9D,GACV,MAAM,IAAI,MAAM,oBAAoBD,CAAG,EAAE,CAE7C,CAEQ,UAAUA,EAAgC,CAChD,KAAK,iBAAiB,EAEtB,IAAME,EAAe,KAAK,WAAcT,EAExC,YAAK,IAAIO,EAAK,KAAK,UAAW,EACvB,KAAK,YAAY,OAAOE,CAAY,CAC7C,CACQ,UAAUF,EAAgCG,EAAe,CAC/D,KAAK,iBAAiB,EAEtB,IAAMD,EAAe,KAAK,WAAcT,EACxC,KAAK,YAAY,OAAOS,CAAY,EAAIC,EAExC,KAAK,IAAIH,EAAK,KAAK,UAAW,CAChC,CAEQ,WAAWA,EAAgC,CACjD,OAAO,KAAK,UAAUA,CAAG,IAAM,CACjC,CACQ,WAAWA,EAAgCG,EAAgB,CACjE,KAAK,UAAUH,EAAKG,EAAQ,EAAI,CAAC,CACnC,CAEQ,UAAUH,EAAgC,CAChD,KAAK,iBAAiB,EAEtB,IAAME,EAAe,KAAK,WAAcR,EAExC,YAAK,IAAIM,EAAK,KAAK,UAAW,EACvB,KAAK,YAAY,QAAQE,CAAY,CAC9C,CACQ,UAAUF,EAAgCG,EAAe,CAC/D,KAAK,iBAAiB,EAEtB,IAAMD,EAAe,KAAK,WAAcR,EACxC,KAAK,YAAY,QAAQQ,CAAY,EAAIC,EAEzC,KAAK,IAAIH,EAAK,KAAK,UAAW,CAChC,CAEQ,eAAeA,EAAgCI,EAAc,CACnE,IAAMC,EAAU,KAAK,YAAY,QAAQD,EAAOX,CAAa,EACvDa,EAAYD,EAAUZ,EAE5B,KAAK,IAAIO,EAAKK,CAAO,EAErB,IAAME,EAAS,IAAI,WAAWH,CAAI,EAC5BI,EAAM,KAAK,YAAY,OAAO,SAASF,EAAWA,EAAYF,CAAI,EACxE,OAAAG,EAAO,IAAIC,CAAG,EAEd,KAAK,YAAY,MAAMH,CAAO,EAEvBE,CACT,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,WAAWhB,EAA0B,WAAW,CAC9D,CACA,IAAI,QAAQY,EAAgB,CAC1B,KAAK,WAAWZ,EAA0B,YAAaY,CAAK,CAC9D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,WAAWZ,EAA0B,OAAO,CAC1D,CACA,IAAI,IAAIY,EAAgB,CACtB,KAAK,WAAWZ,EAA0B,QAASY,CAAK,CAC1D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,WAAWZ,EAA0B,OAAO,CAC1D,CACA,IAAI,IAAIY,EAAgB,CACtB,KAAK,WAAWZ,EAA0B,QAASY,CAAK,CAC1D,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,UAAUZ,EAA0B,aAAa,CAC/D,CACA,IAAI,SAASY,EAAe,CAC1B,KAAK,UAAUZ,EAA0B,cAAeY,CAAK,CAC/D,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,UAAUZ,EAA0B,cAAc,CAChE,CACA,IAAI,UAAUY,EAAe,CAC3B,KAAK,UAAUZ,EAA0B,eAAgBY,CAAK,CAChE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,eAAgB,CAClB,OAAO,KAAK,UAAUZ,EAA0B,kBAAkB,CACpE,CACA,IAAI,cAAcY,EAAe,CAC/B,KAAK,UAAUZ,EAA0B,mBAAoBY,CAAK,CACpE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,oBAAqB,CACvB,OAAO,KAAK,UAAUZ,EAA0B,wBAAwB,CAC1E,CACA,IAAI,mBAAmBY,EAAe,CACpC,KAAK,UAAUZ,EAA0B,yBAA0BY,CAAK,CAC1E,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,UAAUZ,EAA0B,gBAAgB,CAClE,CACA,IAAI,WAAWY,EAAe,CAC5B,KAAK,UAAUZ,EAA0B,iBAAkBY,CAAK,CAClE,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,UAAUZ,EAA0B,gBAAgB,CAClE,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,UAAUA,EAA0B,YAAY,CAC9D,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,UAAUA,EAA0B,YAAY,CAC9D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,eAAeA,EAA0B,QAAS,KAAK,OAAO,CAC5E,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUA,EAA0B,kBAAkB,CACpE,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,eACVA,EAA0B,cAC1B,KAAK,YACP,CACF,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,UAAUA,EAA0B,QAAQ,CAC1D,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,UAAUA,EAA0B,cAAc,CAChE,CACA,IAAI,UAAUY,EAAe,CAC3B,KAAK,UAAUZ,EAA0B,eAAgBY,CAAK,CAChE,CAEQ,gBAAgBM,EAA0B,CAChD,GAAIA,EAAM,SAAW,KAAK,UACxB,MAAM,IAAI,MACR,iCAAiC,KAAK,SAAS,aAAaA,EAAM,MAAM,GAC1E,CAEJ,CAEA,aAAaA,EAAmB,CAC9B,KAAK,gBAAgBA,CAAK,EAE1B,IAAMC,EAAmB,KAAK,eAAiBlB,EAC/C,KAAK,YAAY,OAAO,IAAIiB,EAAOC,CAAgB,EAEnD,IAAMC,EAAM,KAAK,YAAY,sBAC3B,KAAK,MACL,KAAK,cACP,EACMC,EAAgB,KAAK,YAAY,OAAO,SAC5CF,EACAA,EAAmB,KAAK,SAC1B,EACA,OAAAD,EAAM,IAAIG,CAAa,EAEhBD,IAAQ,CACjB,CAEA,QAAQF,EAAqB,CAC3B,KAAK,gBAAgBA,CAAK,EAE1B,QAASI,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAChC,KAAK,eAAeA,CAAC,EAAIJ,EAAMI,CAAC,EAAKlB,EAGvC,IAAMgB,EAAM,KAAK,aAAa,KAAK,cAAc,EAEjD,QAASE,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAChCJ,EAAMI,CAAC,EAAI,KAAK,eAAeA,CAAC,EAAKlB,EAGvC,OAAOgB,CACT,CAEA,SAAU,CACR,KAAK,YAAY,MAAM,KAAK,cAAc,EACtC,KAAK,aAAe,QACtB,KAAK,YAAY,MAAM,KAAK,UAAU,CAE1C,CACF,ECxSIG,IAAU,IAAM,CAClB,IAAIC,EAAa,YAAY,IAE7B,OACF,SAASC,EAAY,CAAC,EAAG,CAEzB,IAAIF,EAAOE,EAAcC,EAAoBC,EAAmBJ,EAAO,MAAS,IAAI,QAAQ,CAACK,EAAQC,IAAS,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAgB,OAAO,OAAO,CAAC,EAAEP,CAAM,EAAMQ,EAAmB,OAAOC,GAAQ,SAAaC,EAAsB,OAAO,eAAe,WAAeC,GAAoB,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ,SAAS,MAAM,SAAaC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAOF,EAAgBE,CAAI,CAAC,IAAIC,EAAMC,EAAUC,GAAcT,GAAoBE,KAA0BA,EAAuBE,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOX,IAAYW,EAAgBX,GAAcW,EAAgB,WAAW,OAAO,EAAGA,EAAgB,GAAQA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAGG,EAAMG,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKT,IAAuBO,EAAWC,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEH,EAAU,CAACE,EAAIE,EAAOC,IAAU,CAAC,IAAIF,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACC,EAAOD,EAAI,QAAQ,EAAE,MAAM,CAACE,EAAQ,CAAC,EAAEF,EAAI,QAAQE,EAAQF,EAAI,KAAK,IAAI,CAAC,GAAS,IAAIG,GAAI,QAAQ,IAAI,KAAK,OAAO,EAAMC,EAAI,QAAQ,MAAM,KAAK,OAAO,EAAE,OAAO,OAAOvB,EAAOO,CAAe,EAAEA,EAAgB,KAAK,IAAIiB,EAAcxB,EAAO,aAAcwB,EAAWxB,EAAO,YAAc,IAAIyB,EAAeC,EAAM,GAAUC,GAAeC,GAAMC,EAAOC,GAAOC,GAAQC,EAAOC,EAAQC,GAAQC,GAAQ,SAASC,GAAmB,CAAC,IAAIC,EAAEZ,EAAW,OAAOG,GAAM,IAAI,UAAUS,CAAC,EAAErC,EAAO,OAAU8B,GAAO,IAAI,WAAWO,CAAC,EAAER,EAAO,IAAI,WAAWQ,CAAC,EAAEN,GAAQ,IAAI,YAAYM,CAAC,EAAErC,EAAO,OAAUgC,EAAO,IAAI,WAAWK,CAAC,EAAEJ,EAAQ,IAAI,YAAYI,CAAC,EAAErC,EAAO,QAAWkC,GAAQ,IAAI,aAAaG,CAAC,EAAEF,GAAQ,IAAI,aAAaE,CAAC,CAAC,CAAC,IAAIC,GAAa,CAAC,EAAMC,EAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAM,SAASC,IAAQ,CAACC,EAAqBL,EAAY,CAAC,CAAC,SAASM,IAAa,CAACH,GAAmB,GAAKE,EAAqBJ,CAAU,CAAC,CAAC,SAASM,IAAS,CAACF,EAAqBH,EAAa,CAAC,CAAC,SAASM,GAAUC,EAAG,CAACR,EAAW,QAAQQ,CAAE,CAAC,CAAC,IAAIC,EAAgB,EAAMC,EAAqB,KAASC,EAAsB,KAAK,SAASC,GAAiBC,EAAG,CAACJ,GAAiB,CAAC,SAASK,GAAoBD,EAAG,CAAmB,GAAlBJ,IAAqBA,GAAiB,IAAMC,IAAuB,OAAM,cAAcA,CAAoB,EAAEA,EAAqB,MAAQC,GAAsB,CAAC,IAAII,EAASJ,EAAsBA,EAAsB,KAAKI,EAAS,CAAC,CAAE,CAAC,SAASC,GAAMC,EAAK,CAACA,EAAK,WAAWA,EAAK,IAAIjC,EAAIiC,CAAI,EAAE9B,EAAM,GAAKC,GAAW,EAAE6B,GAAM,2CAA2C,IAAIC,EAAE,IAAI,YAAY,aAAaD,CAAI,EAAE,MAAApD,EAAmBqD,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAc,wCAA4CC,EAAUC,GAAUA,EAAS,WAAWF,EAAa,EAAMG,EAAkB7D,EAAO,YAAe6D,EAAe,aAAiBF,EAAUE,CAAc,IAAGA,EAAehD,EAAWgD,CAAc,IAAQA,EAAe,IAAI,IAAI,aAAa,YAAY,GAAG,EAAE,KAAK,SAASC,EAAcC,EAAK,CAAC,GAAGA,GAAMF,GAAgBrC,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGP,EAAY,OAAOA,EAAW8C,CAAI,EAAE,KAAK,iDAAiD,CAAC,SAASC,GAAiBC,EAAW,CAAC,MAAG,CAACzC,IAAahB,GAAoBE,IAA2B,OAAO,OAAO,WAAmB,MAAMuD,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCD,CAAU,IAAI,OAAOC,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,IAAIJ,EAAcG,CAAU,CAAC,EAAU,QAAQ,QAAQ,EAAE,KAAK,IAAIH,EAAcG,CAAU,CAAC,CAAC,CAAC,SAASE,EAAuBF,EAAWG,EAAQC,EAAS,CAAC,OAAOL,GAAiBC,CAAU,EAAE,KAAKK,GAAQ,YAAY,YAAYA,EAAOF,CAAO,CAAC,EAAE,KAAKC,EAASE,GAAQ,CAAChD,EAAI,0CAA0CgD,CAAM,EAAE,EAAEhB,GAAMgB,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBF,EAAOL,EAAWG,EAAQd,EAAS,CAAC,MAAG,CAACgB,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAACX,EAAUM,CAAU,GAAG,OAAO,OAAO,WAAmB,MAAMA,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,IAAIzE,EAAO,YAAY,qBAAqByE,EAASE,CAAO,EAAE,OAAO3E,EAAO,KAAK6D,EAAS,SAASiB,EAAO,CAAC,OAAAhD,EAAI,kCAAkCgD,CAAM,EAAE,EAAEhD,EAAI,2CAA2C,EAAS4C,EAAuBF,EAAWG,EAAQd,CAAQ,CAAC,CAAC,CAAC,CAAC,EAASa,EAAuBF,EAAWG,EAAQd,CAAQ,CAAC,CAAC,SAASmB,IAAY,CAAC,IAAIC,EAAK,CAAC,EAAIC,EAAW,EAAE,SAASC,EAAgBC,EAASC,EAAO,CAAC,OAAAC,EAAYF,EAAS,QAAQpD,EAAWsD,EAAY,EAAK3C,EAAkB,EAAEU,GAAUiC,EAAY,CAAI,EAAE1B,GAAoB,kBAAkB,EAAS0B,CAAW,CAAC5B,GAAiB,kBAAkB,EAAE,SAAS6B,EAA2BvF,EAAO,CAACmF,EAAgBnF,EAAO,QAAW,CAAC,CAAC,OAAA+E,GAAiBhD,EAAWqC,EAAea,EAAKM,CAA0B,EAAE,MAAM5E,CAAkB,EAAQ,CAAC,CAAC,CAAC,IAAIuC,EAAqBsC,GAAW,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAEjF,CAAM,CAAE,EAAMkF,GAAsB,CAACC,EAAKC,EAAIC,IAAMxD,EAAO,WAAWsD,EAAKC,EAAIA,EAAIC,CAAG,EAAMC,GAAW,IAAI,WAAeC,GAAWjG,GAAM,CAAC,IAAI+C,EAAEZ,EAAW,OAAW+D,GAAOlG,EAAK+C,EAAE,WAAW,OAAO,MAAM,GAAG,CAAC,OAAAZ,EAAW,KAAK+D,CAAK,EAAEpD,EAAkB,EAAS,CAAC,MAAS,CAAC,CAAC,EAAMqD,GAAwBC,GAAe,CAAC,IAAIC,EAAQ9D,EAAO,OAAO6D,KAAiB,EAAE,IAAIE,EAAYN,GAAW,EAAE,GAAGI,EAAcE,EAAa,MAAO,GAAiE,QAAvDC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAiBC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAIQ,EAAQ,KAAK,IAAIN,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAME,EAAYZ,GAAWW,CAAO,EAAE,GAAGC,EAAa,MAAO,EAAK,CAAC,MAAO,EAAK,EAAMC,GAAUC,GAAI,GAAOC,GAA2B,CAACC,EAAGC,IAAKA,EAAG,UAAU,EAAE,QAAQ,CAAC,CAACD,GAAIA,IAAK,GAAGC,EAAG,WAAW,IAAI,SAASC,GAASJ,EAAGK,EAAWC,EAAYC,EAAOC,EAAU,CAAC,IAAIC,EAAOR,GAA2BI,EAAWC,CAAW,EAAE,MAAO,GAAE,CAAC,IAAII,GAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAMC,EAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAcC,EAAkB,CAACC,EAAYC,EAAIC,IAAiB,CAA8C,QAAzCC,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,CAAM,GAAG,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,EAAa,OAAOA,EAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,GAAK,EAAE,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGP,EAAYC,GAAK,EAAE,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGR,EAAYC,GAAK,EAAE,GAAmG,IAA5FK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,EAAQF,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,GAAK,EAAE,GAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,CAAC,CAAC,CAAC,OAAOJ,CAAG,EAAMK,GAAU,CAACC,EAAOC,IAAO,CAAC,IAAIC,EAAOhB,GAAiBc,CAAM,EAAKC,IAAO,GAAGA,IAAO,KAAKD,IAAS,EAAEvG,GAAIC,GAAK0F,EAAkBc,EAAO,CAAC,CAAC,EAAEA,EAAO,OAAO,GAAOA,EAAO,KAAKD,CAAI,CAAE,EAAME,GAAa,CAACC,EAAIb,IAAiBa,EAAIhB,EAAkBpF,EAAOoG,EAAIb,CAAc,EAAE,GAAOc,EAAS,CAAC,QAAQ,OAAU,KAAK,CAAC,IAAIC,EAAInG,EAAO,CAACkG,EAAS,SAAS,CAAC,EAAE,OAAAA,EAAS,SAAS,EAASC,CAAG,EAAE,MAAM,CAAC,OAAOD,EAAS,IAAI,CAAC,EAAE,OAAOD,EAAI,CAAC,IAAIE,EAAIH,GAAaC,CAAG,EAAE,OAAOE,CAAG,CAAC,EAAMC,GAAU,CAAC/B,EAAGgC,EAAIC,EAAOC,IAAO,CAAW,QAANlD,EAAI,EAAUtF,EAAE,EAAEA,EAAEuI,EAAOvI,IAAI,CAAC,IAAIkI,EAAIhG,EAAQoG,GAAK,CAAC,EAAMG,EAAIvG,EAAQoG,EAAI,GAAG,CAAC,EAAEA,GAAK,EAAE,QAAQI,EAAE,EAAEA,EAAED,EAAIC,IAAKb,GAAUvB,EAAGxE,EAAOoG,EAAIQ,CAAC,CAAC,EAAEpD,GAAKmD,CAAG,CAAC,OAAAvG,EAAQsG,GAAM,CAAC,EAAElD,EAAW,CAAC,EAAMV,GAAY,CAAC,EAAEO,GAAsB,EAAEO,GAAwB,EAAEW,GAAU,EAAEK,GAAS,EAAE2B,EAAS,EAAMrD,EAAYN,GAAW,EAAMiE,GAAmB,KAAKA,GAAmB3D,EAAY,GAAM,EAAM4D,GAA6B3I,EAAO,6BAAgC,CAAC4I,EAAGC,KAAMF,GAA6B3I,EAAO,6BAAgC+E,EAAY,GAAM6D,EAAGC,CAAE,EAAMC,GAAgC9I,EAAO,gCAAmC4I,IAAKE,GAAgC9I,EAAO,gCAAmC+E,EAAY,GAAM6D,CAAE,EAAMG,GAAsB/I,EAAO,sBAAyB,CAAC4I,EAAGC,KAAME,GAAsB/I,EAAO,sBAAyB+E,EAAY,GAAM6D,EAAGC,CAAE,EAAMG,GAAsBhJ,EAAO,sBAAyB,CAAC4I,EAAGC,EAAGI,KAAMD,GAAsBhJ,EAAO,sBAAyB+E,EAAY,GAAM6D,EAAGC,EAAGI,CAAE,EAAMC,GAAMlJ,EAAO,MAAS4I,IAAKM,GAAMlJ,EAAO,MAAS+E,EAAY,GAAM6D,CAAE,EAAMO,GAAQnJ,EAAO,QAAW4I,IAAKO,GAAQnJ,EAAO,QAAW+E,EAAY,GAAM6D,CAAE,EAAMQ,EAAUlG,EAAsB,SAASmG,GAAW,CAAKD,GAAUE,EAAI,EAAMF,IAAUlG,EAAsBmG,EAAS,EAAE,SAASC,GAAK,CAAuC,GAAnCtG,EAAgB,IAAUN,GAAO,EAAKM,EAAgB,GAAG,OAAO,SAASuG,GAAO,CAAIH,IAAiBA,EAAU,GAAKpJ,EAAO,UAAa,GAAQ,CAAA0B,IAAakB,GAAY,EAAEzC,EAAoBH,CAAM,EAAE6C,GAAQ,GAAC,CAAE0G,EAAM,CAAE,CAAC,OAAAD,EAAI,EAG/mSpJ,EAAU,KACnB,CAEA,GAAG,EACIsJ,GAAQxJ,GCRR,IAAMyJ,GAAkB,CAC7BC,EACA,CACE,WAAAC,EACA,YAAAC,EACA,WAAAC,CACF,IACG,CACH,IAAMC,EAAgB,MAAM,KAC1B,CAAE,OAAQF,CAAY,EACtB,IAAM,IAAIG,EAAkBL,EAAQC,EAAYE,CAAU,CAC5D,EACA,QAAWG,KAAgBF,EACzBE,EAAa,QAAU,GA+BzB,MAAO,CAAE,QATgB,CAACC,EAAOC,IAAW,CAC1C,IAAMC,EAAW,KAAK,IAAIF,EAAM,OAAQL,CAAW,EACnD,QAASQ,EAAI,EAAGA,EAAID,EAAUC,IAC5BN,EAAcM,CAAC,EAAG,QAAQH,EAAMG,CAAC,CAAE,EAEnCF,EAAOE,CAAC,EAAG,IAAIH,EAAMG,CAAC,CAAE,CAE5B,EAEkB,YA3BhBC,GAEOP,EAAc,CAAC,EAAGO,CAAC,EAyBG,YAvBX,CAClBA,EACAC,IACG,CACH,QAAWN,KAAgBF,EACzBE,EAAaK,CAAC,EAAIC,CAEtB,EAgB4C,QAf5B,IAAM,CACpB,QAAWN,KAAgBF,EACzBE,EAAa,QAAQ,CAEzB,CAWoD,CACtD,EChDO,IAAMO,GAAK,yCCElB,IAAMC,GAAyB,IAEzBC,EAAN,cAAoC,qBAAsB,CAIxD,YAAYC,EAA8B,CACxC,MAAM,EAHR,KAAQ,UAAY,GAKlB,KAAK,KAAK,iBAAiB,UAAWC,GAAK,CACrCA,EAAE,OAAS,WACb,KAAK,QAAQ,CAEjB,CAAC,GAGC,SAAY,CACZ,IAAMC,EAAc,MAAMC,GAAgB,CACxC,WAAaC,GAAiBA,EAC9B,WAAYJ,EAAQ,iBAAiB,UACvC,CAAC,EACD,KAAK,UAAYK,GAAgBH,EAAa,CAC5C,WAAYJ,GACZ,YAAaE,EAAQ,iBAAiB,YACtC,UACF,CAAC,EACG,KAAK,WACP,KAAK,QAAQ,CAEjB,GAAG,CAEL,CAEA,QACEM,EACAC,EAEAC,EACA,CAKA,OAJIF,EAAO,SAAW,GAAK,CAACA,EAAO,CAAC,GAAKA,EAAO,CAAC,GAAG,SAAW,GAI3D,CAAC,KAAK,WAKV,KAAK,UAAU,QAAQA,EAAO,CAAC,EAAIC,EAAQ,CAAC,CAAE,EACvC,EACT,CAEQ,SAAU,CAChB,KAAK,UAAY,GACjB,KAAK,WAAW,QAAQ,EACxB,KAAK,UAAY,MACnB,CACF,EAEA,kBAAkBE,GAAIV,CAAqB","names":["define_window_default","SpeexPreprocessCtlRequest","I16_BYTE_SIZE","I32_BYTE_SIZE","F32_BYTE_SIZE","I16_MAX_NUMBER","SpeexPreprocessor","speexModule","frameSize","samplingRate","req","output","ctlBuffIndex","value","size","buffPtr","buffIndex","result","res","frame","processBuffIndex","vad","processedBuff","i","Module","_scriptDir","moduleArg","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","ENVIRONMENT_IS_WEB","define_window_default","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","path","read_","readAsync","readBinary","url","xhr","onload","onerror","out","err","wasmBinary","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","callRuntimeCallbacks","initRuntime","postRun","addOnInit","cb","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","abort","what","e","dataURIPrefix","isDataURI","filename","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","response","instantiateArrayBuffer","imports","receiver","binary","reason","instantiateAsync","createWasm","info","wasmImports","receiveInstance","instance","module","wasmExports","receiveInstantiationResult","callbacks","_emscripten_memcpy_js","dest","src","num","getHeapMax","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","_fd_close","fd","convertI32PairToI53Checked","lo","hi","_fd_seek","offset_low","offset_high","whence","newOffset","offset","printCharBuffers","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","printChar","stream","curr","buffer","UTF8ToString","ptr","SYSCALLS","ret","_fd_write","iov","iovcnt","pnum","len","j","___wasm_call_ctors","_speex_preprocess_state_init","a0","a1","_speex_preprocess_state_destroy","_speex_preprocess_run","_speex_preprocess_ctl","a2","_free","_malloc","calledRun","runCaller","run","doRun","speex_default","createProcessor","module","bufferSize","maxChannels","sampleRate","preprocessors","SpeexPreprocessor","preprocessor","input","output","channels","i","k","v","id","AudioWorkletBufferSize","SpeexWorkletProcessor","options","e","speexModule","speex_default","file","createProcessor","inputs","outputs","_parameters","id"]}